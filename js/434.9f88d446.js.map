{"version":3,"file":"js/434.9f88d446.js","mappings":"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","sources":["webpack://kursa4_vue/../src/math/MathUtil.js","webpack://kursa4_vue/../src/math/Span.js","webpack://kursa4_vue/../src/utils/WebGLUtil.js","webpack://kursa4_vue/../src/utils/DomUtil.js","webpack://kursa4_vue/../src/utils/ImgUtil.js","webpack://kursa4_vue/../src/utils/Util.js","webpack://kursa4_vue/../src/utils/Puid.js","webpack://kursa4_vue/../src/core/Pool.js","webpack://kursa4_vue/../src/debug/Stats.js","webpack://kursa4_vue/../src/events/EventDispatcher.js","webpack://kursa4_vue/../src/math/Integration.js","webpack://kursa4_vue/../src/core/Proton.js","webpack://kursa4_vue/../src/utils/Rgb.js","webpack://kursa4_vue/../src/math/ease.js","webpack://kursa4_vue/../src/math/Vector2D.js","webpack://kursa4_vue/../src/core/Particle.js","webpack://kursa4_vue/../src/utils/ColorUtil.js","webpack://kursa4_vue/../src/math/Polar2D.js","webpack://kursa4_vue/../src/math/Mat3.js","webpack://kursa4_vue/../src/math/ArraySpan.js","webpack://kursa4_vue/../src/math/Rectangle.js","webpack://kursa4_vue/../src/initialize/Rate.js","webpack://kursa4_vue/../src/initialize/Initialize.js","webpack://kursa4_vue/../src/initialize/Life.js","webpack://kursa4_vue/../src/zone/Zone.js","webpack://kursa4_vue/../src/zone/PointZone.js","webpack://kursa4_vue/../src/initialize/Position.js","webpack://kursa4_vue/../src/initialize/Velocity.js","webpack://kursa4_vue/../src/initialize/Mass.js","webpack://kursa4_vue/../src/initialize/Radius.js","webpack://kursa4_vue/../src/initialize/Body.js","webpack://kursa4_vue/../src/behaviour/Behaviour.js","webpack://kursa4_vue/../src/behaviour/Force.js","webpack://kursa4_vue/../src/behaviour/Attraction.js","webpack://kursa4_vue/../src/behaviour/RandomDrift.js","webpack://kursa4_vue/../src/behaviour/Gravity.js","webpack://kursa4_vue/../src/behaviour/Collision.js","webpack://kursa4_vue/../src/behaviour/CrossZone.js","webpack://kursa4_vue/../src/behaviour/Alpha.js","webpack://kursa4_vue/../src/behaviour/Scale.js","webpack://kursa4_vue/../src/behaviour/Rotate.js","webpack://kursa4_vue/../src/behaviour/Color.js","webpack://kursa4_vue/../src/behaviour/Cyclone.js","webpack://kursa4_vue/../src/behaviour/Repulsion.js","webpack://kursa4_vue/../src/behaviour/GravityWell.js","webpack://kursa4_vue/../src/initialize/InitializeUtil.js","webpack://kursa4_vue/../src/emitter/Emitter.js","webpack://kursa4_vue/../src/emitter/BehaviourEmitter.js","webpack://kursa4_vue/../src/emitter/FollowEmitter.js","webpack://kursa4_vue/../src/render/BaseRenderer.js","webpack://kursa4_vue/../src/render/CanvasRenderer.js","webpack://kursa4_vue/../src/render/DomRenderer.js","webpack://kursa4_vue/../src/render/EaselRenderer.js","webpack://kursa4_vue/../src/render/PixelRenderer.js","webpack://kursa4_vue/../src/render/PixiRenderer.js","webpack://kursa4_vue/../src/utils/MStack.js","webpack://kursa4_vue/../src/render/WebGLRenderer.js","webpack://kursa4_vue/../src/render/CustomRenderer.js","webpack://kursa4_vue/../src/zone/LineZone.js","webpack://kursa4_vue/../src/zone/CircleZone.js","webpack://kursa4_vue/../src/zone/RectZone.js","webpack://kursa4_vue/../src/zone/ImageZone.js","webpack://kursa4_vue/../src/debug/Debug.js","webpack://kursa4_vue/../src/index.js","webpack://kursa4_vue/../src/RAFManager.js","webpack://kursa4_vue/./src/components/Navbar.vue","webpack://kursa4_vue/./src/components/MenuBurger.vue","webpack://kursa4_vue/./src/components/MenuBurger.vue?9b8b","webpack://kursa4_vue/./src/components/Navbar.vue?436b","webpack://kursa4_vue/./src/views/About.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/ParticlesBg.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/utils/Rand.js","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/BallParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/CanvasComp.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/CanvasComp.vue?2241","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/utils/Color.js","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/BallParticles.vue?89a3","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/ColorParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/ColorParticles.vue?5a26","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/CircleParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/CircleParticles.vue?0b9d","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/CobwebParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/CobwebParticles.vue?9d55","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/ThickParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/ThickParticles.vue?4597","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/CustomParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/CustomParticles.vue?c5df","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/LinesParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/LinesParticles.vue?cbda","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/PolygonParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/PolygonParticles.vue?bfdd","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/SquareParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/SquareParticles.vue?c4b2","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/FountainParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/FountainParticles.vue?0ef6","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/TadpoleParticles.vue","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/particles/TadpoleParticles.vue?d346","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/ParticlesBg.vue?f507","webpack://kursa4_vue/./node_modules/particles-bg-vue/src/particles-bg/index.js","webpack://kursa4_vue/./src/views/About.vue?1393"],"sourcesContent":["const PI = 3.1415926;\nconst INFINITY = Infinity;\n\nconst MathUtil = {\n  PI: PI,\n  PIx2: PI * 2,\n  PI_2: PI / 2,\n  PI_180: PI / 180,\n  N180_PI: 180 / PI,\n  Infinity: -999,\n\n  isInfinity(num) {\n    return num === this.Infinity || num === INFINITY;\n  },\n\n  randomAToB(a, b, isInt = false) {\n    if (!isInt) return a + Math.random() * (b - a);\n    else return Math.floor(Math.random() * (b - a)) + a;\n  },\n\n  randomFloating(center, f, isInt) {\n    return this.randomAToB(center - f, center + f, isInt);\n  },\n\n  randomColor() {\n    return (\n      \"#\" +\n      (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6)\n    );\n  },\n\n  randomZone(display) {},\n\n  floor(num, k = 4) {\n    const digits = Math.pow(10, k);\n    return Math.floor(num * digits) / digits;\n  },\n\n  degreeTransform(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16(num) {\n    return `#${num.toString(16)}`;\n  }\n};\n\nexport default MathUtil;\n","import Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Span {\n  constructor(a, b, center) {\n    if (Util.isArray(a)) {\n      this.isArray = true;\n      this.a = a;\n    } else {\n      this.isArray = false;\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this.center = Util.initValue(center, false);\n    }\n  }\n\n  getValue(isInt = false) {\n    if (this.isArray) {\n      return Util.getRandFromArray(this.a);\n    } else {\n      if (!this.center) {\n        return MathUtil.randomAToB(this.a, this.b, isInt);\n      } else {\n        return MathUtil.randomFloating(this.a, this.b, isInt);\n      }\n    }\n  }\n\n  /**\n   * Returns a new Span object\n   *\n   * @memberof Proton#Proton.Util\n   * @method setSpanValue\n   *\n   * @todo a, b and c should be 'Mixed' or 'Number'?\n   *\n   * @param {Mixed | Span} a\n   * @param {Mixed}               b\n   * @param {Mixed}               c\n   *\n   * @return {Span}\n   */\n  static setSpanValue(a, b, c) {\n    if (a instanceof Span) {\n      return a;\n    } else {\n      if (b === undefined) {\n        return new Span(a);\n      } else {\n        if (c === undefined) return new Span(a, b);\n        else return new Span(a, b, c);\n      }\n    }\n  }\n\n  /**\n   * Returns the value from a Span, if the param is not a Span it will return the given parameter\n   *\n   * @memberof Proton#Proton.Util\n   * @method getValue\n   *\n   * @param {Mixed | Span} pan\n   *\n   * @return {Mixed} the value of Span OR the parameter if it is not a Span\n   */\n  static getSpanValue(pan) {\n    return pan instanceof Span ? pan.getValue() : pan;\n  }\n}\n","export default {\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method ipot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Boolean}\n   */\n  ipot(length) {\n    return (length & (length - 1)) === 0;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method nhpot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Number}\n   */\n  nhpot(length) {\n    --length;\n    for (let i = 1; i < 32; i <<= 1) {\n      length = length | (length >> i);\n    }\n\n    return length + 1;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeTranslation\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} tx either 0 or 1\n   * @param {Number} ty either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeTranslation(tx, ty) {\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeRotation\n   *\n   * @todo add description\n   * @todo add return description\n   *\n   * @param {Number} angleInRadians\n   *\n   * @return {Object}\n   */\n  makeRotation(angleInRadians) {\n    let c = Math.cos(angleInRadians);\n    let s = Math.sin(angleInRadians);\n\n    return [c, -s, 0, s, c, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeScale\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} sx either 0 or 1\n   * @param {Number} sy either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeScale(sx, sy) {\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method matrixMultiply\n   *\n   * @todo add description\n   * @todo add a, b description\n   * @todo add return description\n   *\n   * @param {Object} a\n   * @param {Object} b\n   *\n   * @return {Object}\n   */\n  matrixMultiply(a, b) {\n    let a00 = a[0 * 3 + 0];\n    let a01 = a[0 * 3 + 1];\n    let a02 = a[0 * 3 + 2];\n    let a10 = a[1 * 3 + 0];\n    let a11 = a[1 * 3 + 1];\n    let a12 = a[1 * 3 + 2];\n    let a20 = a[2 * 3 + 0];\n    let a21 = a[2 * 3 + 1];\n    let a22 = a[2 * 3 + 2];\n    let b00 = b[0 * 3 + 0];\n    let b01 = b[0 * 3 + 1];\n    let b02 = b[0 * 3 + 2];\n    let b10 = b[1 * 3 + 0];\n    let b11 = b[1 * 3 + 1];\n    let b12 = b[1 * 3 + 2];\n    let b20 = b[2 * 3 + 0];\n    let b21 = b[2 * 3 + 1];\n    let b22 = b[2 * 3 + 2];\n\n    return [\n      a00 * b00 + a01 * b10 + a02 * b20,\n      a00 * b01 + a01 * b11 + a02 * b21,\n      a00 * b02 + a01 * b12 + a02 * b22,\n      a10 * b00 + a11 * b10 + a12 * b20,\n      a10 * b01 + a11 * b11 + a12 * b21,\n      a10 * b02 + a11 * b12 + a12 * b22,\n      a20 * b00 + a21 * b10 + a22 * b20,\n      a20 * b01 + a21 * b11 + a22 * b21,\n      a20 * b02 + a21 * b12 + a22 * b22\n    ];\n  }\n};\n","export default {\n  /**\n   * Creates and returns a new canvas. The opacity is by default set to 0\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method createCanvas\n   *\n   * @param {String} $id the canvas' id\n   * @param {Number} $width the canvas' width\n   * @param {Number} $height the canvas' height\n   * @param {String} [$position=absolute] the canvas' position, default is 'absolute'\n   *\n   * @return {Object}\n   */\n  createCanvas(id, width, height, position = \"absolute\") {\n    const dom = document.createElement(\"canvas\");\n\n    dom.id = id;\n    dom.width = width;\n    dom.height = height;\n    dom.style.opacity = 0;\n    dom.style.position = position;\n    this.transform(dom, -500, -500, 0, 0);\n\n    return dom;\n  },\n\n  createDiv(id, width, height) {\n    const dom = document.createElement(\"div\");\n\n    dom.id = id;\n    dom.style.position = \"absolute\";\n    this.resize(dom, width, height);\n\n    return dom;\n  },\n\n  resize(dom, width, height) {\n    dom.style.width = width + \"px\";\n    dom.style.height = height + \"px\";\n    dom.style.marginLeft = -width / 2 + \"px\";\n    dom.style.marginTop = -height / 2 + \"px\";\n  },\n\n  /**\n   * Adds a transform: translate(), scale(), rotate() to a given div dom for all browsers\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method transform\n   *\n   * @param {HTMLDivElement} div\n   * @param {Number} $x\n   * @param {Number} $y\n   * @param {Number} $scale\n   * @param {Number} $rotate\n   */\n  transform(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate(${x}px, ${y}px) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"transform\", transform);\n  },\n\n  transform3d(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate3d(${x}px, ${y}px, 0) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"backfaceVisibility\", \"hidden\");\n    this.css3(div, \"transform\", transform);\n  },\n\n  css3(div, key, val) {\n    const bkey = key.charAt(0).toUpperCase() + key.substr(1);\n\n    div.style[`Webkit${bkey}`] = val;\n    div.style[`Moz${bkey}`] = val;\n    div.style[`O${bkey}`] = val;\n    div.style[`ms${bkey}`] = val;\n    div.style[`${key}`] = val;\n  }\n};\n","import WebGLUtil from \"./WebGLUtil\";\nimport DomUtil from \"./DomUtil\";\n\nconst imgsCache = {};\nconst canvasCache = {};\nlet canvasId = 0;\n\nexport default {\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    context.drawImage(image, rect.x, rect.y);\n    const imagedata = context.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    );\n    context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\n    return imagedata;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method getImgFromCache\n   *\n   * @todo add description\n   * @todo describe func\n   *\n   * @param {Mixed}               img\n   * @param {Proton.Particle}     particle\n   * @param {Boolean}             drawCanvas  set to true if a canvas should be saved into particle.data.canvas\n   * @param {Boolean}             func\n   */\n  getImgFromCache(img, callback, param) {\n    const src = typeof img === \"string\" ? img : img.src;\n\n    if (imgsCache[src]) {\n      callback(imgsCache[src], param);\n    } else {\n      const image = new Image();\n      image.onload = e => {\n        imgsCache[src] = e.target;\n        callback(imgsCache[src], param);\n      };\n\n      image.src = src;\n    }\n  },\n\n  getCanvasFromCache(img, callback, param) {\n    const src = img.src;\n\n    if (!canvasCache[src]) {\n      const width = WebGLUtil.nhpot(img.width);\n      const height = WebGLUtil.nhpot(img.height);\n\n      const canvas = DomUtil.createCanvas(\n        `proton_canvas_cache_${++canvasId}`,\n        width,\n        height\n      );\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(img, 0, 0, img.width, img.height);\n\n      canvasCache[src] = canvas;\n    }\n\n    callback && callback(canvasCache[src], param);\n\n    return canvasCache[src];\n  }\n};\n","import Span from \"../math/Span\";\nimport ImgUtil from \"./ImgUtil\";\n\nexport default {\n  /**\n   * Returns the default if the value is null or undefined\n   *\n   * @memberof Proton#Proton.Util\n   * @method initValue\n   *\n   * @param {Mixed} value a specific value, could be everything but null or undefined\n   * @param {Mixed} defaults the default if the value is null or undefined\n   */\n  initValue(value, defaults) {\n    value = value !== null && value !== undefined ? value : defaults;\n    return value;\n  },\n\n  /**\n   * Checks if the value is a valid array\n   *\n   * @memberof Proton#Proton.Util\n   * @method isArray\n   *\n   * @param {Array} value Any array\n   *\n   * @returns {Boolean}\n   */\n  isArray(value) {\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n  },\n\n  /**\n   * Destroyes the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyArray\n   *\n   * @param {Array} array Any array\n   */\n  emptyArray(arr) {\n    if (arr) arr.length = 0;\n  },\n\n  toArray(arr) {\n    return this.isArray(arr) ? arr : [arr];\n  },\n\n  getRandFromArray(arr) {\n    if (!arr) return null;\n    return arr[Math.floor(arr.length * Math.random())];\n  },\n\n  /**\n   * Destroyes the given object\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyObject\n   *\n   * @param {Object} obj Any object\n   */\n  emptyObject(obj, ignore = null) {\n    for (let key in obj) {\n      if (ignore && ignore.indexOf(key) > -1) continue;\n      delete obj[key];\n    }\n  },\n\n  /**\n   * Makes an instance of a class and binds the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method classApply\n   *\n   * @param {Function} constructor A class to make an instance from\n   * @param {Array} [args] Any array to bind it to the constructor\n   *\n   * @return {Object} The instance of constructor, optionally bind with args\n   */\n  classApply(constructor, args = null) {\n    if (!args) {\n      return new constructor();\n    } else {\n      const FactoryFunc = constructor.bind.apply(\n        constructor,\n        [null].concat(args)\n      );\n      return new FactoryFunc();\n    }\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method setVectorVal\n   *\n   * @todo add description for param `target`\n   * @todo add description for param `conf`\n   * @todo add description for function\n   *\n   * @param {Object} target\n   * @param {Object} conf\n   */\n  setVectorVal(particle, conf = null) {\n    if (!conf) return;\n\n    if (this.hasProp(conf, \"x\")) particle.p.x = conf[\"x\"];\n    if (this.hasProp(conf, \"y\")) particle.p.y = conf[\"y\"];\n\n    if (this.hasProp(conf, \"vx\")) particle.v.x = conf[\"vx\"];\n    if (this.hasProp(conf, \"vy\")) particle.v.y = conf[\"vy\"];\n\n    if (this.hasProp(conf, \"ax\")) particle.a.x = conf[\"ax\"];\n    if (this.hasProp(conf, \"ay\")) particle.a.y = conf[\"ay\"];\n\n    if (this.hasProp(conf, \"p\")) particle.p.copy(conf[\"p\"]);\n    if (this.hasProp(conf, \"v\")) particle.v.copy(conf[\"v\"]);\n    if (this.hasProp(conf, \"a\")) particle.a.copy(conf[\"a\"]);\n\n    if (this.hasProp(conf, \"position\")) particle.p.copy(conf[\"position\"]);\n    if (this.hasProp(conf, \"velocity\")) particle.v.copy(conf[\"velocity\"]);\n    if (this.hasProp(conf, \"accelerate\")) particle.a.copy(conf[\"accelerate\"]);\n  },\n\n  hasProp(target, key) {\n    if (!target) return false;\n    return target[key] !== undefined;\n    // return obj.hasOwnProperty(key);\n  },\n\n  /**\n   * set the prototype in a given prototypeObject\n   *\n   * @memberof Proton#Proton.Util\n   * @method setProp\n   *\n   * @todo add description for param `target`\n   * @todo translate desription from chinese to english\n   *\n   * @param {Object} target\n   * @param {Object} prototypeObject An object of single prototypes\n   *\n   * @return {Object} target\n   */\n  setProp(target, props) {\n    for (let prop in props) {\n      if (target.hasOwnProperty(prop)) {\n        target[prop] = Span.getSpanValue(props[prop]);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    return ImgUtil.getImageData(context, image, rect);\n  },\n\n  destroyAll(arr, param = null) {\n    let i = arr.length;\n\n    while (i--) {\n      try {\n        arr[i].destroy(param);\n      } catch (e) {}\n\n      delete arr[i];\n    }\n\n    arr.length = 0;\n  },\n\n  assign(target, source) {\n    if (typeof Object.assign !== \"function\") {\n      for (let key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n\n      return target;\n    } else {\n      return Object.assign(target, source);\n    }\n  }\n};\n","const idsMap = {};\n\nconst Puid = {\n  _index: 0,\n  _cache: {},\n\n  id(type) {\n    if (idsMap[type] === undefined || idsMap[type] === null) idsMap[type] = 0;\n    return `${type}_${idsMap[type]++}`;\n  },\n\n  getId(target) {\n    let uid = this.getIdFromCache(target);\n    if (uid) return uid;\n\n    uid = `PUID_${this._index++}`;\n    this._cache[uid] = target;\n\n    return uid;\n  },\n\n  getIdFromCache(target) {\n    let obj, id;\n\n    for (id in this._cache) {\n      obj = this._cache[id];\n\n      if (obj === target) return id;\n      if (this.isBody(obj, target) && obj.src === target.src) return id;\n    }\n\n    return null;\n  },\n\n  isBody(obj, target) {\n    return (\n      typeof obj === \"object\" &&\n      typeof target === \"object\" &&\n      obj.isInner &&\n      target.isInner\n    );\n  },\n\n  getTarget(uid) {\n    return this._cache[uid];\n  }\n};\n\nexport default Puid;\n","/**\n * Pool is the cache pool of the proton engine, it is very important.\n *\n * get(target, params, uid)\n *  Class\n *    uid = Puid.getId -> Puid save target cache\n *    target.__puid = uid\n *\n *  body\n *    uid = Puid.getId -> Puid save target cache\n *\n *\n * expire(target)\n *  cache[target.__puid] push target\n *\n */\nimport Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\n\nexport default class Pool {\n  /**\n   * @memberof! Proton#\n   * @constructor\n   * @alias Proton.Pool\n   *\n   * @todo add description\n   * @todo add description of properties\n   *\n   * @property {Number} total\n   * @property {Object} cache\n   */\n  constructor(num) {\n    this.total = 0;\n    this.cache = {};\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method get\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  get(target, params, uid) {\n    let p;\n    uid = uid || target.__puid || Puid.getId(target);\n\n    if (this.cache[uid] && this.cache[uid].length > 0) {\n      p = this.cache[uid].pop();\n    } else {\n      p = this.createOrClone(target, params);\n    }\n\n    p.__puid = target.__puid || uid;\n    return p;\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method set\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object} target\n   *\n   * @return {Object}\n   */\n  expire(target) {\n    return this.getCache(target.__puid).push(target);\n  }\n\n  /**\n   * Creates a new class instance\n   *\n   * @todo add more documentation\n   *\n   * @method create\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target any Object or Function\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  createOrClone(target, params) {\n    this.total++;\n\n    if (this.create) {\n      return this.create(target, params);\n    } else if (typeof target === \"function\") {\n      return Util.classApply(target, params);\n    } else {\n      return target.clone();\n    }\n  }\n\n  /**\n   * @todo add description - what is in the cache?\n   *\n   * @method getCount\n   * @memberof Proton#Proton.Pool\n   *\n   * @return {Number}\n   */\n  getCount() {\n    let count = 0;\n    for (let id in this.cache) count += this.cache[id].length;\n    return count++;\n  }\n\n  /**\n   * Destroyes all items from Pool.cache\n   *\n   * @method destroy\n   * @memberof Proton#Proton.Pool\n   */\n  destroy() {\n    for (let id in this.cache) {\n      this.cache[id].length = 0;\n      delete this.cache[id];\n    }\n  }\n\n  /**\n   * Returns Pool.cache\n   *\n   * @method getCache\n   * @memberof Proton#Proton.Pool\n   * @private\n   *\n   * @param {Number} uid the unique id\n   *\n   * @return {Object}\n   */\n  getCache(uid = \"default\") {\n    if (!this.cache[uid]) this.cache[uid] = [];\n    return this.cache[uid];\n  }\n}\n","export default class Stats {\n  constructor(proton) {\n    this.proton = proton;\n    this.container = null;\n    this.type = 1;\n\n    this.emitterIndex = 0;\n    this.rendererIndex = 0;\n  }\n\n  update(style, body) {\n    this.add(style, body);\n\n    const emitter = this.getEmitter();\n    const renderer = this.getRenderer();\n    let str = \"\";\n\n    switch (this.type) {\n      case 2:\n        str += \"emitter:\" + this.proton.emitters.length + \"<br>\";\n        if (emitter) str += \"em speed:\" + emitter.emitSpeed + \"<br>\";\n        if (emitter) str += \"pos:\" + this.getEmitterPos(emitter);\n        break;\n\n      case 3:\n        if (emitter)\n          str += \"initializes:\" + emitter.initializes.length + \"<br>\";\n        if (emitter)\n          str +=\n            '<span style=\"display:inline-block;\">' +\n            this.concatArr(emitter.initializes) +\n            \"</span><br>\";\n        if (emitter) str += \"behaviours:\" + emitter.behaviours.length + \"<br>\";\n        if (emitter)\n          str +=\n            '<span style=\"display:inline-block;\">' +\n            this.concatArr(emitter.behaviours) +\n            \"</span><br>\";\n        break;\n\n      case 4:\n        if (renderer) str += renderer.name + \"<br>\";\n        if (renderer) str += \"body:\" + this.getCreatedNumber(renderer) + \"<br>\";\n        break;\n\n      default:\n        str += \"particles:\" + this.proton.getCount() + \"<br>\";\n        str += \"pool:\" + this.proton.pool.getCount() + \"<br>\";\n        str += \"total:\" + this.proton.pool.total;\n    }\n\n    this.container.innerHTML = str;\n  }\n\n  add(style, body) {\n    if (!this.container) {\n      this.type = 1;\n\n      this.container = document.createElement(\"div\");\n      this.container.style.cssText = [\n        \"position:absolute;bottom:0px;left:0;cursor:pointer;\",\n        \"opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;\",\n        \"width:120px;height:50px;background-color:#002;color:#0ff;\"\n      ].join(\"\");\n\n      this.container.addEventListener(\n        \"click\",\n        e => {\n          this.type++;\n          if (this.type > 4) this.type = 1;\n        },\n        false\n      );\n\n      let bg, color;\n      switch (style) {\n        case 2:\n          bg = \"#201\";\n          color = \"#f08\";\n          break;\n\n        case 3:\n          bg = \"#020\";\n          color = \"#0f0\";\n          break;\n\n        default:\n          bg = \"#002\";\n          color = \"#0ff\";\n      }\n\n      this.container.style[\"background-color\"] = bg;\n      this.container.style[\"color\"] = color;\n    }\n\n    if (!this.container.parentNode) {\n      body = body || this.body || document.body;\n      body.appendChild(this.container);\n    }\n  }\n\n  getEmitter() {\n    return this.proton.emitters[this.emitterIndex];\n  }\n\n  getRenderer() {\n    return this.proton.renderers[this.rendererIndex];\n  }\n\n  concatArr(arr) {\n    let result = \"\";\n    if (!arr || !arr.length) return result;\n\n    for (let i = 0; i < arr.length; i++) {\n      result += (arr[i].name || \"\").substr(0, 1) + \".\";\n    }\n\n    return result;\n  }\n\n  getCreatedNumber(renderer) {\n    return renderer.pool.total || (renderer.cpool && renderer.cpool.total) || 0;\n  }\n\n  getEmitterPos(e) {\n    return Math.round(e.p.x) + \",\" + Math.round(e.p.y);\n  }\n}\n","/*\n * EventDispatcher\n * This code reference since http://createjs.com/.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = null;\n  }\n\n  static bind(target) {\n    target.prototype.dispatchEvent = EventDispatcher.prototype.dispatchEvent;\n\n    target.prototype.hasEventListener =\n      EventDispatcher.prototype.hasEventListener;\n\n    target.prototype.addEventListener =\n      EventDispatcher.prototype.addEventListener;\n\n    target.prototype.removeEventListener =\n      EventDispatcher.prototype.removeEventListener;\n\n    target.prototype.removeAllEventListeners =\n      EventDispatcher.prototype.removeAllEventListeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this._listeners) {\n      this._listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this._listeners[type]) this._listeners[type] = [];\n    this._listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this._listeners) return;\n    if (!this._listeners[type]) return;\n\n    const arr = this._listeners[type];\n    const length = arr.length;\n\n    for (let i = 0; i < length; i++) {\n      if (arr[i] === listener) {\n        if (length === 1) {\n          delete this._listeners[type];\n        }\n\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this._listeners = null;\n    else if (this._listeners) delete this._listeners[type];\n  }\n\n  dispatchEvent(type, args) {\n    let result = false;\n    const listeners = this._listeners;\n\n    if (type && listeners) {\n      let arr = listeners[type];\n      if (!arr) return result;\n\n      // arr = arr.slice();\n      // to avoid issues with items being removed or added during the dispatch\n\n      let handler;\n      let i = arr.length;\n      while (i--) {\n        handler = arr[i];\n        result = result || handler(args);\n      }\n    }\n\n    return !!result;\n  }\n\n  hasEventListener(type) {\n    const listeners = this._listeners;\n    return !!(listeners && listeners[type]);\n  }\n}\n","export default class Integration {\n  constructor(type) {\n    this.type = type;\n  }\n\n  calculate(particles, time, damping) {\n    this.eulerIntegrate(particles, time, damping);\n  }\n\n  // Euler Integrate\n  // https://rosettacode.org/wiki/Euler_method\n  eulerIntegrate(particle, time, damping) {\n    if (!particle.sleep) {\n      particle.old.p.copy(particle.p);\n      particle.old.v.copy(particle.v);\n\n      particle.a.multiplyScalar(1 / particle.mass);\n      particle.v.add(particle.a.multiplyScalar(time));\n      particle.p.add(particle.old.v.multiplyScalar(time));\n\n      if (damping) particle.v.multiplyScalar(damping);\n\n      particle.a.clear();\n    }\n  }\n}\n","import Pool from \"./Pool\";\nimport Util from \"../utils/Util\";\nimport Stats from \"../debug/Stats\";\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport MathUtil from \"../math/MathUtil\";\nimport Integration from \"../math/Integration\";\n\nexport default class Proton {\n  static USE_CLOCK = false;\n\n  // measure 1:100\n  static MEASURE = 100;\n  static EULER = \"euler\";\n  static RK2 = \"runge-kutta2\";\n\n  // event name\n  static PARTICLE_CREATED = \"PARTICLE_CREATED\";\n  static PARTICLE_UPDATE = \"PARTICLE_UPDATE\";\n  static PARTICLE_SLEEP = \"PARTICLE_SLEEP\";\n  static PARTICLE_DEAD = \"PARTICLE_DEAD\";\n\n  static EMITTER_ADDED = \"EMITTER_ADDED\";\n  static EMITTER_REMOVED = \"EMITTER_REMOVED\";\n\n  static PROTON_UPDATE = \"PROTON_UPDATE\";\n  static PROTON_UPDATE_AFTER = \"PROTON_UPDATE_AFTER\";\n  static DEFAULT_INTERVAL = 0.0167;\n\n  static amendChangeTabsBug = true;\n\n  /**\n   * The constructor to add emitters\n   *\n   * @constructor Proton\n   *\n   * @todo proParticleCount is not in use\n   * @todo add more documentation of the single properties and parameters\n   *\n   * @param {Number} [proParticleCount] not in use?\n   * @param {Number} [integrationType=Proton.EULER]\n   *\n   * @property {String} [integrationType=Proton.EULER]\n   * @property {Array} emitters   All added emitter\n   * @property {Array} renderers  All added renderer\n   * @property {Number} time      The active time\n   * @property {Number} oldtime   The old time\n   */\n  constructor(integrationType) {\n    this.emitters = [];\n    this.renderers = [];\n\n    this.time = 0;\n    this.now = 0;\n    this.then = 0;\n    this.elapsed = 0;\n\n    this.stats = new Stats(this);\n    this.pool = new Pool(80);\n\n    this.integrationType = Util.initValue(integrationType, Proton.EULER);\n    this.integrator = new Integration(this.integrationType);\n\n    this._fps = \"auto\";\n    this._interval = Proton.DEFAULT_INTERVAL;\n  }\n\n  set fps(fps) {\n    this._fps = fps;\n    this._interval =\n      fps === \"auto\" ? Proton.DEFAULT_INTERVAL : MathUtil.floor(1 / fps, 7);\n  }\n\n  get fps() {\n    return this._fps;\n  }\n\n  /**\n   * add a type of Renderer\n   *\n   * @method addRenderer\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Renderer} render\n   */\n  addRenderer(render) {\n    render.init(this);\n    this.renderers.push(render);\n  }\n\n  /**\n   * @name add a type of Renderer\n   *\n   * @method addRenderer\n   * @param {Renderer} render\n   */\n  removeRenderer(render) {\n    const index = this.renderers.indexOf(render);\n    this.renderers.splice(index, 1);\n    render.remove(this);\n  }\n\n  /**\n   * add the Emitter\n   *\n   * @method addEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Emitter} emitter\n   */\n  addEmitter(emitter) {\n    this.emitters.push(emitter);\n    emitter.parent = this;\n\n    this.dispatchEvent(Proton.EMITTER_ADDED, emitter);\n  }\n\n  /**\n   * Removes an Emitter\n   *\n   * @method removeEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Proton.Emitter} emitter\n   */\n  removeEmitter(emitter) {\n    const index = this.emitters.indexOf(emitter);\n    this.emitters.splice(index, 1);\n    emitter.parent = null;\n\n    this.dispatchEvent(Proton.EMITTER_REMOVED, emitter);\n  }\n\n  /**\n   * Updates all added emitters\n   *\n   * @method update\n   * @memberof Proton\n   * @instance\n   */\n  update() {\n    // 'auto' is the default browser refresh rate, the vast majority is 60fps\n    if (this._fps === \"auto\") {\n      this.dispatchEvent(Proton.PROTON_UPDATE);\n\n      if (Proton.USE_CLOCK) {\n        if (!this.then) this.then = new Date().getTime();\n        this.now = new Date().getTime();\n        this.elapsed = (this.now - this.then) * 0.001;\n        // Fix bugs such as chrome browser switching tabs causing excessive time difference\n        this.amendChangeTabsBug();\n\n        if (this.elapsed > 0) this.emittersUpdate(this.elapsed);\n        this.then = this.now;\n      } else {\n        this.emittersUpdate(Proton.DEFAULT_INTERVAL);\n      }\n\n      this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n    }\n\n    // If the fps frame rate is set\n    else {\n      if (!this.then) this.then = new Date().getTime();\n      this.now = new Date().getTime();\n      this.elapsed = (this.now - this.then) * 0.001;\n\n      if (this.elapsed > this._interval) {\n        this.dispatchEvent(Proton.PROTON_UPDATE);\n        this.emittersUpdate(this._interval);\n        // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n        this.then = this.now - (this.elapsed % this._interval) * 1000;\n        this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n      }\n    }\n  }\n\n  emittersUpdate(elapsed) {\n    let i = this.emitters.length;\n    while (i--) this.emitters[i].update(elapsed);\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method amendChangeTabsBug\n   * @memberof Proton\n   * @instance\n   */\n  amendChangeTabsBug() {\n    if (!Proton.amendChangeTabsBug) return;\n    if (this.elapsed > 0.5) {\n      this.then = new Date().getTime();\n      this.elapsed = 0;\n    }\n  }\n\n  /**\n   * Counts all particles from all emitters\n   *\n   * @method getCount\n   * @memberof Proton\n   * @instance\n   */\n  getCount() {\n    let total = 0;\n    let i = this.emitters.length;\n\n    while (i--) total += this.emitters[i].particles.length;\n    return total;\n  }\n\n  getAllParticles() {\n    let particles = [];\n    let i = this.emitters.length;\n\n    while (i--) particles = particles.concat(this.emitters[i].particles);\n    return particles;\n  }\n\n  destroyAllEmitters() {\n    Util.destroyAll(this.emitters);\n  }\n\n  /**\n   * Destroys everything related to this Proton instance. This includes all emitters, and all properties\n   *\n   * @method destroy\n   * @memberof Proton\n   * @instance\n   */\n  destroy(remove = false) {\n    const destroyOther = () => {\n      this.time = 0;\n      this.then = 0;\n      this.pool.destroy();\n\n      Util.destroyAll(this.emitters);\n      Util.destroyAll(this.renderers, this.getAllParticles());\n    };\n\n    if (remove) {\n      setTimeout(destroyOther, 200);\n    } else {\n      destroyOther();\n    }\n  }\n}\n\nEventDispatcher.bind(Proton);\n","export default class Rgb {\n  constructor(r = 255, g = 255, b = 255) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  reset() {\n    this.r = 255;\n    this.g = 255;\n    this.b = 255;\n  }\n}\n","import MathUtil from \"./MathUtil\";\n\nexport default {\n  easeLinear(value) {\n    return value;\n  },\n\n  easeInQuad(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine(value) {\n    return -Math.cos(value * MathUtil.PI_2) + 1;\n  },\n\n  easeOutSine(value) {\n    return Math.sin(value * MathUtil.PI_2);\n  },\n\n  easeInOutSine(value) {\n    return -0.5 * (Math.cos(Math.PI * value) - 1);\n  },\n\n  easeInExpo(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo(value) {\n    if (value === 0) return 0;\n\n    if (value === 1) return 1;\n\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack(value) {\n    let s = 1.70158;\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack(value) {\n    let s = 1.70158;\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack(value) {\n    let s = 1.70158;\n    if ((value /= 0.5) < 1)\n      return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  },\n\n  getEasing(ease) {\n    if (typeof ease === \"function\") return ease;\n    else return this[ease] || this.easeLinear;\n  }\n};\n","import MathUtil from \"../math/MathUtil\";\n\nexport default class Vector2D {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  getGradient() {\n    if (this.x !== 0) return Math.atan2(this.y, this.x);\n    else if (this.y > 0) return MathUtil.PI_2;\n    else if (this.y < 0) return -MathUtil.PI_2;\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n  }\n\n  addXY(a, b) {\n    this.x += a;\n    this.y += b;\n\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  }\n\n  divideScalar(s) {\n    if (s !== 0) {\n      this.x /= s;\n      this.y /= s;\n    } else {\n      this.set(0, 0);\n    }\n\n    return this;\n  }\n\n  multiplyScalar(s) {\n    this.x *= s;\n    this.y *= s;\n\n    return this;\n  }\n\n  negate() {\n    return this.multiplyScalar(-1);\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length());\n  }\n\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  rotate(tha) {\n    const x = this.x;\n    const y = this.y;\n\n    this.x = x * Math.cos(tha) + y * Math.sin(tha);\n    this.y = -x * Math.sin(tha) + y * Math.cos(tha);\n\n    return this;\n  }\n\n  distanceToSquared(v) {\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n\n    return this;\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n}\n","/** @typedef {import('../behaviour/Behaviour')} Behaviour */\n/** @typedef {import('../math/Vector2D')} Vector2D */\n/** @typedef {import('../utils/Rgb')} Rgb */\nimport Rgb from \"../utils/Rgb\";\nimport Puid from \"../utils/Puid\";\nimport Util from \"../utils/Util\";\nimport ease from \"../math/ease\";\nimport Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Particle {\n  /** @type string */\n  id = ''\n\n  /** @type {{p:Vector2D,v:Vector2D,a:Vector2D}} */\n  old = {}\n\n  /** @type {object} */\n  data = {}\n\n  /** @type {Behaviour[]} */\n  behaviours = []\n\n  /** @type {Vector2D} */\n  p = []\n\n  /** @type {Vector2D} */\n  v = []\n\n  /** @type {Vector2D} */\n  a = []\n\n  /** @type {Rgb} */\n  rgb = {}\n\n  /**\n   * the Particle class\n   *\n   * @class Proton.Particle\n   * @constructor\n   * @param {Object} pObj the parameters object;\n   * for example {life:3,dead:false}\n   */\n  constructor(conf) {\n    /**\n     * The particle's id;\n     * @property id\n     * @type {string}\n     */\n    this.name = \"Particle\";\n    this.id = Puid.id(this.name);\n    this.old = {};\n    this.data = {};\n    this.behaviours = [];\n\n    this.p = new Vector2D();\n    this.v = new Vector2D();\n    this.a = new Vector2D();\n    this.old.p = new Vector2D();\n    this.old.v = new Vector2D();\n    this.old.a = new Vector2D();\n\n    this.rgb = new Rgb();\n    this.reset();\n    conf && Util.setProp(this, conf);\n  }\n\n  getDirection() {\n    return Math.atan2(this.v.x, -this.v.y) * MathUtil.N180_PI;\n  }\n\n  reset() {\n    this.life = Infinity;\n    this.age = 0;\n\n    this.dead = false;\n    this.sleep = false;\n    this.body = null;\n    this.sprite = null;\n    this.parent = null;\n\n    this.energy = 1; // Energy Loss\n    this.mass = 1;\n    this.radius = 10;\n    this.alpha = 1;\n    this.scale = 1;\n    this.rotation = 0;\n    this.color = null;\n\n    this.p.set(0, 0);\n    this.v.set(0, 0);\n    this.a.set(0, 0);\n    this.old.p.set(0, 0);\n    this.old.v.set(0, 0);\n    this.old.a.set(0, 0);\n    this.easing = ease.easeLinear;\n\n    this.rgb.reset();\n    Util.emptyObject(this.data);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n      this.applyBehaviours(time, index);\n    }\n\n    if (this.age < this.life) {\n      const scale = this.easing(this.age / this.life);\n      this.energy = Math.max(1 - scale, 0);\n    } else {\n      this.destroy();\n    }\n  }\n\n  applyBehaviours(time, index) {\n    const length = this.behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.behaviours[i] &&\n        this.behaviours[i].applyBehaviour(this, time, index);\n    }\n  }\n\n  /**\n   * @param {Behaviour} behaviour\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    if (behaviour.hasOwnProperty(\"parents\")) behaviour.parents.push(this);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * @param {Behaviour[]} behaviours\n   */\n  addBehaviours(behaviours) {\n    const length = behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      const behaviour = this.behaviours.splice(index, 1);\n      behaviour.parents = null;\n    }\n  }\n\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  /**\n   * Destory this particle\n   * @method destroy\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n","export default {\n  /**\n   * @typedef  {Object} rgbObject\n   * @property {Number} r red value\n   * @property {Number} g green value\n   * @property {Number} b blue value\n   */\n  /**\n   * converts a hex value to a rgb object\n   *\n   * @memberof Proton#Proton.Util\n   * @method hexToRgb\n   *\n   * @param {String} h any hex value, e.g. #000000 or 000000 for black\n   *\n   * @return {rgbObject}\n   */\n  hexToRgb(h) {\n    const hex16 = h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n    const r = parseInt(hex16.substring(0, 2), 16);\n    const g = parseInt(hex16.substring(2, 4), 16);\n    const b = parseInt(hex16.substring(4, 6), 16);\n\n    return { r, g, b };\n  },\n\n  /**\n   * converts a rgb value to a rgb string\n   *\n   * @memberof Proton#Proton.Util\n   * @method rgbToHex\n   *\n   * @param {Object | Proton.hexToRgb} rgb a rgb object like in {@link Proton#Proton.}\n   *\n   * @return {String} rgb()\n   */\n  rgbToHex(rbg) {\n    return `rgb(${rbg.r}, ${rbg.g}, ${rbg.b})`;\n  },\n\n  getHex16FromParticle(p) {\n    return Number(p.rgb.r) * 65536 + Number(p.rgb.g) * 256 + Number(p.rgb.b);\n  }\n};\n","import Vector2D from \"./Vector2D\";\n\nexport default class Polar2D {\n  constructor(r, tha) {\n    this.r = Math.abs(r) || 0;\n    this.tha = tha || 0;\n  }\n\n  set(r, tha) {\n    this.r = r;\n    this.tha = tha;\n    return this;\n  }\n\n  setR(r) {\n    this.r = r;\n    return this;\n  }\n\n  setTha(tha) {\n    this.tha = tha;\n    return this;\n  }\n\n  copy(p) {\n    this.r = p.r;\n    this.tha = p.tha;\n    return this;\n  }\n\n  toVector() {\n    return new Vector2D(this.getX(), this.getY());\n  }\n\n  getX() {\n    return this.r * Math.sin(this.tha);\n  }\n\n  getY() {\n    return -this.r * Math.cos(this.tha);\n  }\n\n  normalize() {\n    this.r = 1;\n    return this;\n  }\n\n  equals(v) {\n    return v.r === this.r && v.tha === this.tha;\n  }\n\n  clear() {\n    this.r = 0.0;\n    this.tha = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Polar2D(this.r, this.tha);\n  }\n}\n","const Mat3 = {\n  create(mat3) {\n    const mat = new Float32Array(9);\n    if (mat3) this.set(mat3, mat);\n\n    return mat;\n  },\n\n  set(mat1, mat2) {\n    for (let i = 0; i < 9; i++) mat2[i] = mat1[i];\n\n    return mat2;\n  },\n\n  multiply(mat, mat2, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a02 = mat[2],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b00 = mat2[0],\n      b01 = mat2[1],\n      b02 = mat2[2],\n      b10 = mat2[3],\n      b11 = mat2[4],\n      b20 = mat2[6],\n      b21 = mat2[7];\n\n    mat3[0] = b00 * a00 + b01 * a10;\n    mat3[1] = b00 * a01 + b01 * a11;\n    mat3[2] = a02 * b02;\n    mat3[3] = b10 * a00 + b11 * a10;\n    mat3[4] = b10 * a01 + b11 * a11;\n    mat3[6] = b20 * a00 + b21 * a10 + a20;\n    mat3[7] = b20 * a01 + b21 * a11 + a21;\n\n    return mat3;\n  },\n\n  inverse(mat, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b01 = a11,\n      b11 = -a10,\n      b21 = a21 * a10 - a11 * a20,\n      d = a00 * b01 + a01 * b11,\n      id;\n\n    id = 1 / d;\n    mat3[0] = b01 * id;\n    mat3[1] = -a01 * id;\n    mat3[3] = b11 * id;\n    mat3[4] = a00 * id;\n    mat3[6] = b21 * id;\n    mat3[7] = (-a21 * a00 + a01 * a20) * id;\n\n    return mat3;\n  },\n\n  multiplyVec2(m, vec, mat3) {\n    let x = vec[0],\n      y = vec[1];\n\n    mat3[0] = x * m[0] + y * m[3] + m[6];\n    mat3[1] = x * m[1] + y * m[4] + m[7];\n\n    return mat3;\n  }\n};\n\nexport default Mat3;\n","import Span from \"./Span\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"./MathUtil\";\n\nexport default class ArraySpan extends Span {\n  constructor(color) {\n    super();\n    this._arr = Util.toArray(color);\n  }\n\n  getValue() {\n    const val = Util.getRandFromArray(this._arr);\n    return val === \"random\" || val === \"Random\" ? MathUtil.randomColor() : val;\n  }\n\n  /**\n   * Make sure that the color is an instance of Proton.ArraySpan, if not it makes a new instance\n   *\n   * @method setSpanValue\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  static createArraySpan(arr) {\n    if (!arr) return null;\n\n    if (arr instanceof ArraySpan) return arr;\n    else return new ArraySpan(arr);\n  }\n}\n","export default class Rectangle {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n\n    this.width = w;\n    this.height = h;\n\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y) {\n    if (x <= this.right && x >= this.x && y <= this.bottom && y >= this.y)\n      return true;\n    else return false;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\n\nexport default class Rate {\n  /**\n   * The number of particles per second emission (a [particle]/b [s]);\n   * @namespace\n   * @memberof! Proton#\n   * @constructor\n   * @alias Rate\n   *\n   * @param {Array | Number | Span} numpan the number of each emission;\n   * @param {Array | Number | Span} timepan the time of each emission;\n   * for example: new Rate(new Span(10, 20), new Span(.1, .25));\n   */\n  constructor(numpan, timepan) {\n    this.numPan = Span.setSpanValue(Util.initValue(numpan, 1));\n    this.timePan = Span.setSpanValue(Util.initValue(timepan, 1));\n\n    this.startTime = 0;\n    this.nextTime = 0;\n    this.init();\n  }\n\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.startTime = 0;\n      this.nextTime = this.timePan.getValue();\n\n      if (this.numPan.b === 1) {\n        if (this.numPan.getValue(false) > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue(true);\n      }\n    }\n\n    return 0;\n  }\n}\n","export default class Initialize {\n  reset() {}\n\n  init(emitter, particle) {\n    if (particle) {\n      this.initialize(particle);\n    } else {\n      this.initialize(emitter);\n    }\n  }\n\n  // sub class init\n  initialize(target) {}\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Life extends Initialize {\n  constructor(a, b, c) {\n    super();\n\n    this.lifePan = Span.setSpanValue(a, b, c);\n    this.name = \"Life\";\n  }\n\n  initialize(target) {\n    if (this.lifePan.a === Infinity) target.life = Infinity;\n    else target.life = this.lifePan.getValue();\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\n\nexport default class Zone {\n  constructor() {\n    this.vector = new Vector2D(0, 0);\n    this.random = 0;\n    this.crossType = \"dead\";\n    this.alert = true;\n  }\n\n  getPosition() {}\n\n  crossing(particle) {}\n}\n","import Zone from \"./Zone\";\n\nexport default class PointZone extends Zone {\n  constructor(x, y) {\n    super();\n\n    this.x = x;\n    this.y = y;\n  }\n\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    if (this.alert) {\n      console.error(\"Sorry, PointZone does not support crossing method!\");\n      this.alert = false;\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport PointZone from \"../zone/PointZone\";\nimport Initialize from \"./Initialize\";\n\nexport default class Position extends Initialize {\n  constructor(zone) {\n    super();\n    this.zone = Util.initValue(zone, new PointZone());\n    this.name = \"Position\";\n  }\n\n  reset(zone) {\n    this.zone = Util.initValue(zone, new PointZone());\n  }\n\n  initialize(target) {\n    this.zone.getPosition();\n\n    target.p.x = this.zone.vector.x;\n    target.p.y = this.zone.vector.y;\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport Polar2D from \"../math/Polar2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Velocity extends Initialize {\n  constructor(rpan, thapan, type) {\n    super();\n\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n\n    this.name = \"Velocity\";\n  }\n\n  reset(rpan, thapan, type) {\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n  }\n\n  normalizeVelocity(vr) {\n    return vr * Proton.MEASURE;\n  }\n\n  initialize(target) {\n    if (this.type === \"p\" || this.type === \"P\" || this.type === \"polar\") {\n      const polar2d = new Polar2D(\n        this.normalizeVelocity(this.rPan.getValue()),\n        this.thaPan.getValue() * MathUtil.PI_180\n      );\n\n      target.v.x = polar2d.getX();\n      target.v.y = polar2d.getY();\n    } else {\n      target.v.x = this.normalizeVelocity(this.rPan.getValue());\n      target.v.y = this.normalizeVelocity(this.thaPan.getValue());\n    }\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Mass extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.massPan = Span.setSpanValue(a, b, c);\n    this.name = \"Mass\";\n  }\n\n  initialize(target) {\n    target.mass = this.massPan.getValue();\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Radius extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.radius = Span.setSpanValue(a, b, c);\n\n    this.name = \"Radius\";\n  }\n\n  reset(a, b, c) {\n    this.radius = Span.setSpanValue(a, b, c);\n  }\n\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.data.oldRadius = particle.radius;\n  }\n}\n","import Util from \"../utils/Util\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Initialize from \"./Initialize\";\n\nexport default class Body extends Initialize {\n  constructor(image, w, h) {\n    super();\n\n    this.image = this.setSpanValue(image);\n    this.w = Util.initValue(w, 20);\n    this.h = Util.initValue(h, this.w);\n    this.name = \"Body\";\n  }\n\n  initialize(particle) {\n    const imageTarget = this.image.getValue();\n\n    if (typeof imageTarget === \"string\") {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        src: imageTarget,\n        isInner: true,\n        inner: true\n      };\n    } else {\n      particle.body = imageTarget;\n    }\n  }\n\n  setSpanValue(image) {\n    return image instanceof ArraySpan ? image : new ArraySpan(image);\n  }\n}\n","import Proton from '../core/Proton';\nimport Util from '../utils/Util';\nimport ease from '../math/ease';\n\nexport default class Behaviour {\n    static id = 0;\n\n    /**\n     * The Behaviour class is the base for the other Behaviour\n     *\n     * @memberof! -\n     * @interface\n     * @alias Proton.Behaviour\n     *\n     * @param {Number} life \tthe behaviours life\n     * @param {String} easing \tThe behaviour's decaying trend, for example ease.easeOutQuart\n     *\n     * @property {String}  id \t\tThe behaviours id\n     * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n     * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n     * @property {Number}  age=0 \tHow long the particle should be 'alife'\n     * @property {Number}  energy=1\n     * @property {Boolean} dead=false The particle is dead at first\n     * @property {Array}   parents \tThe behaviour's parents array\n     * @property {String}  name \tThe behaviour name\n     */\n    constructor(life, easing) {\n\n        this.life = Util.initValue(life, Infinity);\n        this.easing = ease.getEasing(easing);\n\n        this.age = 0;\n        this.energy = 1;\n        this.dead = false;\n        this.parents = [];\n\n        this.id = `Behaviour_${Behaviour.id++}`;\n        this.name = 'Behaviour';\n    }\n\n    /**\n     * Reset this behaviour's parameters\n     *\n     * @method reset\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Number} [life=Infinity] \t\tthis behaviour's life\n     * @param {String} [easing=easeLinear] \tthis behaviour's easing\n     */\n    reset(life, easing) {\n        this.life = Util.initValue(life, Infinity);\n        this.easing = ease.getEasing(easing);\n    }\n\n    /**\n     * Normalize a force by 1:100;\n     *\n     * @method normalizeForce\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Vector2D} force\n     */\n    normalizeForce(force) {\n        return force.multiplyScalar(Proton.MEASURE);\n    }\n\n    /**\n     * Normalize a value by 1:100;\n     *\n     * @method normalizeValue\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Number} value\n     */\n    normalizeValue(value) {\n        return value * Proton.MEASURE;\n    }\n\n    /**\n     * Initialize the behaviour's parameters for all particles\n     *\n     * @method initialize\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     */\n    initialize(particle) {}\n\n    /**\n     * Apply this behaviour for all particles every time\n     *\n     * @method applyBehaviour\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     * @param {Number} \t\t\ttime the integrate time 1/ms\n     * @param {Int} \t\t\tindex the particle index\n     */\n    calculate(particle, time, index) {\n        this.age += time;\n\n        if (this.age >= this.life || this.dead) {\n            this.energy = 0;\n            this.dead = true;\n            this.destroy();\n        } else {\n            const scale = this.easing(particle.age / particle.life);\n            this.energy = Math.max(1 - scale, 0);\n        }\n    }\n\n    /**\n     * Destory this behaviour\n     *\n     * @method destroy\n     * @memberof Proton.Behaviour\n     * @instance\n     */\n    destroy() {\n        let i = this.parents.length;\n        while (i--) {\n            this.parents[i].removeBehaviour(this);\n        }\n\n        this.parents.length = 0;\n    }\n}\n","import Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class Force extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Force\n\t *\n\t * @param {Number} fx\n\t * @param {Number} fy\n\t * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(fx, fy, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.force = this.normalizeForce(new Vector2D(fx, fy));\n\t\tthis.name = 'Force';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Force\n\t * @instance\n\t *\n\t * @param {Number} fx\n\t * @param {Number} fy\n\t * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(fx, fy, life, easing) {\n\t\tthis.force = this.normalizeForce(new Vector2D(fx, fy));\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Force\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} the integrate time 1/ms\n\t * @param {Int} the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\t\tparticle.a.add(this.force);\n\t}\n}","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Attraction extends Behaviour {\n  /**\n   * This behaviour let the particles follow one specific Proton.Vector2D\n   *\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Attraction\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {Proton.Vector2D} targetPosition\n   * @property {Number} radius\n   * @property {Number} force\n   * @property {Number} radiusSq\n   * @property {Proton.Vector2D} attractionForce\n   * @property {Number} lengthSq\n   * @property {String} name The Behaviour name\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(life, easing);\n\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    this.name = \"Attraction\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Attraction\n   * @instance\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @memberof Proton#Proton.Attraction\n   * @method applyBehaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.p);\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (this.lengthSq > 0.00004 && this.lengthSq < this.radiusSq) {\n      this.attractionForce.normalize();\n      this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.multiplyScalar(this.force);\n\n      particle.a.add(this.attractionForce);\n    }\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class RandomDrift extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias RandomDrift\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {Number} time The time of the drift\n   * @property {String} name The Behaviour name\n   */\n  constructor(driftX, driftY, delay, life, easing) {\n    super(life, easing);\n\n    this.reset(driftX, driftY, delay);\n    this.time = 0;\n    this.name = \"RandomDrift\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(driftX, driftY, delay, life, easing) {\n    this.panFoce = new Vector2D(driftX, driftY);\n    this.panFoce = this.normalizeForce(this.panFoce);\n    this.delay = delay;\n\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.data.time = 0;\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.data.time += time;\n\n    if (particle.data.time >= this.delay) {\n      particle.a.addXY(\n        MathUtil.randomAToB(-this.panFoce.x, this.panFoce.x),\n        MathUtil.randomAToB(-this.panFoce.y, this.panFoce.y)\n      );\n\n      particle.data.time = 0;\n    }\n  }\n}\n","import Force from './Force';\n\nexport default class Gravity extends Force {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton#Proton.Force\n\t * @constructor\n\t * @alias Proton.Gravity\n\t *\n\t * @param {Number} g \t\t\t\t\t\t\tGravity\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(g, life, easing) {\n\t\tsuper(0, g, life, easing);\n\t\tthis.name = 'Gravity';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Gravity\n\t * @instance\n\t *\n\t * @param {Number} g \t\t\t\t\t\t\tGravity\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(g, life, easing) {\n\t\tsuper.reset(0, g, life, easing);\n\t}\n}","import Util from '../utils/Util';\nimport Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class Collision extends Behaviour {\n\n\t/**\n\t * The callback after collision\n\t *\n\t * @callback Callback\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Proton.Paritcle} otherParticle\n\t */\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Collision\n\t *\n\t * @todo add description to mass\n\t *\n\t * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n\t * @param {Boolean} \t\t[mass=true]\n\t * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(emitter, mass, callback, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(emitter, mass, callback);\n\t\tthis.name = 'Collision';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @memberof Proton#Proton.Collision\n\t * @method reset\n\t * @instance\n\t *\n\t * @todo add description to mass\n\t *\n\t * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n\t * @param {Boolean} \t\t[mass=true]\n\t * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n\t * @param {Number} \t\t\t[life=Infinity] \tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(emitter, mass, callback, life, easing) {\n\t\tthis.emitter = Util.initValue(emitter, null);\n\t\tthis.mass = Util.initValue(mass, true);\n\t\tthis.callback = Util.initValue(callback, null);\n\n\t\tthis.collisionPool = [];\n\t\tthis.delta = new Vector2D();\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @memberof Proton#Proton.Collision\n\t * @method applyBehaviour\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tconst newPool = this.emitter ? this.emitter.particles.slice(index) : this.pool.slice(index);\n\t\tconst length = newPool.length;\n\n\t\tlet otherParticle;\n\t\tlet lengthSq;\n\t\tlet overlap;\n\t\tlet totalMass;\n\t\tlet averageMass1, averageMass2;\n\t\tlet i;\n\n\t\tfor (i = 0; i < length; i++) {\n\t\t\totherParticle = newPool[i];\n\n\t\t\tif (otherParticle !== particle) {\n\t\t\t\tthis.delta.copy(otherParticle.p);\n\t\t\t\tthis.delta.sub(particle.p);\n\n\t\t\t\tlengthSq = this.delta.lengthSq();\n\t\t\t\tconst distance = particle.radius + otherParticle.radius;\n\n\t\t\t\tif (lengthSq <= distance * distance) {\n\t\t\t\t\toverlap = distance - Math.sqrt(lengthSq);\n\t\t\t\t\toverlap += 0.5;\n\n\t\t\t\t\ttotalMass = particle.mass + otherParticle.mass;\n\t\t\t\t\taverageMass1 = this.mass ? otherParticle.mass / totalMass : 0.5;\n\t\t\t\t\taverageMass2 = this.mass ? particle.mass / totalMass : 0.5;\n\n\t\t\t\t\tparticle.p.add(this.delta.clone().normalize().multiplyScalar(overlap * -averageMass1));\n\t\t\t\t\totherParticle.p.add(this.delta.normalize().multiplyScalar(overlap * averageMass2));\n\n\t\t\t\t\tthis.callback && this.callback(particle, otherParticle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","import Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class CrossZone extends Behaviour {\n\n    /**\n     * Defines what happens if the particles come to the end of the specified zone\n     *\n     * @memberof! Proton#\n     * @augments Proton.Behaviour\n     * @constructor\n     * @alias Proton.CrossZone\n     *\n     * @param {Proton.Zone} zone \t\t\t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n     * @param {String} \t\t[crossType=dead] \t\t\twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n     * @param {Number} \t\t[life=Infinity] \t\t\tthis behaviour's life\n     * @param {String} \t\t[easing=ease.easeLinear] \tthis behaviour's easing\n     *\n     * @property {String} name The Behaviour name\n     */\n    constructor(zone, crossType, life, easing) {\n        super(life, easing);\n\n        this.reset(zone, crossType);\n        this.name = 'CrossZone';\n    }\n\n    /**\n     * Reset this behaviour's parameters\n     *\n     * @method reset\n     * @memberof Proton#Proton.CrossZone\n     * @instance\n     *\n     * @param {Proton.Zone} zone \t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n     * @param {String} \t\t[crossType=dead] \twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n     * @param {Number} \t\t[life=Infinity] \tthis behaviour's life\n     * @param {String} \t\t[easing=easeLinear]\tthis behaviour's easing\n     */\n    reset(zone, crossType, life, easing) {\n        this.zone = zone;\n        this.zone.crossType = Util.initValue(crossType, 'dead');\n\n        life && super.reset(life, easing);\n    }\n\n    /**\n     * Apply this behaviour for all particles every time\n     *\n     * @method applyBehaviour\n     * @memberof Proton#Proton.CrossZone\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     * @param {Number} the integrate time 1/ms\n     * @param {Int} the particle index\n     */\n    applyBehaviour(particle, time, index) {\n        this.calculate(particle, time, index);\n        this.zone.crossing(particle);\n    };\n}","import Util from \"../utils/Util\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Alpha extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Alpha\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Alpha\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Sets the new alpha value of the particle\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle A single Proton generated particle\n   */\n  initialize(particle) {\n    particle.data.alphaA = this.a.getValue();\n\n    if (this.same) particle.data.alphaB = particle.data.alphaA;\n    else particle.data.alphaB = this.b.getValue();\n  }\n\n  /**\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    particle.alpha =\n      particle.data.alphaB +\n      (particle.data.alphaA - particle.data.alphaB) * this.energy;\n\n    if (particle.alpha < 0.001) particle.alpha = 0;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class Scale extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Scale\n\t *\n\t * @todo add description for 'a' and 'b'\n\t *\n\t * @param {Number} a\n\t * @param {String} b\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(a, b, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(a, b);\n\t\tthis.name = 'Scale';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Number} a\n\t * @param {String} b\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(a, b, life, easing) {\n\t\tthis.same = b === null || b === undefined ? true : false;\n\t\tthis.a = Span.setSpanValue(Util.initValue(a, 1));\n\t\tthis.b = Span.setSpanValue(b);\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Initialize the behaviour's parameters for all particles\n\t *\n\t * @method initialize\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t */\n\tinitialize(particle) {\n\t\tparticle.data.scaleA = this.a.getValue();\n\t\tparticle.data.oldRadius = particle.radius;\n\t\tparticle.data.scaleB = this.same ? particle.data.scaleA : this.b.getValue();\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\t\tparticle.scale = particle.data.scaleB + (particle.data.scaleA - particle.data.scaleB) * this.energy;\n\n\t\tif (particle.scale < 0.0001) particle.scale = 0;\n\t\tparticle.radius = particle.data.oldRadius * particle.scale;\n\t}\n}","import Span from \"../math/Span\";\nimport Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class Rotate extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Rotate\n\t *\n\t * @todo add description for 'a', 'b' and 'style'\n\t *\n\t * @param {String} [influence=Velocity] The rotation's influence\n\t * @param {String} b\n\t * @param {String} [style=to]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(influence, b, style, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(influence, b, style);\n\t\tthis.name = 'Rotate';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @todo add description for 'a', 'b' and 'style'\n\t *\n\t * @param {String} a\n\t * @param {String} b\n\t * @param {String} [style=to]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(a, b, style, life, easing) {\n\t\tthis.same = b === null || b === undefined ? true : false;\n\n\t\tthis.a = Span.setSpanValue(Util.initValue(a, 'Velocity'));\n\t\tthis.b = Span.setSpanValue(Util.initValue(b, 0));\n\t\tthis.style = Util.initValue(style, 'to');\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Initialize the behaviour's parameters for all particles\n\t *\n\t * @method initialize\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t */\n\tinitialize(particle) {\n\t\tparticle.rotation = this.a.getValue();\n\t\tparticle.data.rotationA = this.a.getValue();\n\n\t\tif (!this.same) particle.data.rotationB = this.b.getValue();\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\n\t\tif (!this.same) {\n\t\t\tif (this.style === 'to' || this.style === 'TO' || this.style === '_') {\n\t\t\t\tparticle.rotation += particle.data.rotationB + (particle.data.rotationA - particle.data.rotationB) * this.energy\n\t\t\t} else {\n\t\t\t\tparticle.rotation += particle.data.rotationB;\n\t\t\t}\n\t\t} else if (this.a.a === 'V' || this.a.a === 'Velocity' || this.a.a === 'v') {\n\t\t\t// beta...\n\t\t\tparticle.rotation = particle.getDirection();\n\t\t}\n\t}\n\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Color extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Color\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Color\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.a = ArraySpan.createArraySpan(a);\n    this.b = ArraySpan.createArraySpan(b);\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.color = this.a.getValue();\n    particle.data.colorA = ColorUtil.hexToRgb(particle.color);\n\n    if (this.b) particle.data.colorB = ColorUtil.hexToRgb(this.b.getValue());\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    if (this.b) {\n      this.calculate(particle, time, index);\n\n      particle.rgb.r =\n        particle.data.colorB.r +\n        (particle.data.colorA.r - particle.data.colorB.r) * this.energy;\n      particle.rgb.g =\n        particle.data.colorB.g +\n        (particle.data.colorA.g - particle.data.colorB.g) * this.energy;\n      particle.rgb.b =\n        particle.data.colorB.b +\n        (particle.data.colorA.b - particle.data.colorB.b) * this.energy;\n\n      particle.rgb.r = Math.floor(particle.rgb.r);\n      particle.rgb.g = Math.floor(particle.rgb.g);\n      particle.rgb.b = Math.floor(particle.rgb.b);\n    } else {\n      particle.rgb.r = particle.data.colorA.r;\n      particle.rgb.g = particle.data.colorA.g;\n      particle.rgb.b = particle.data.colorA.b;\n    }\n  }\n}\n","import MathUtil from \"../math/MathUtil\";\nimport Vector2D from \"../math/Vector2D\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nconst CHANGING = \"changing\";\n\nexport default class Cyclone extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Cyclone\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(angle, force, life, easing) {\n    super(life, easing);\n    this.setAngleAndForce(angle, force);\n    this.name = \"Cyclone\";\n  }\n\n  setAngleAndForce(angle, force) {\n    this.force = CHANGING;\n    this.angle = MathUtil.PI / 2;\n\n    if (angle === \"right\") {\n      this.angle = MathUtil.PI / 2;\n    } else if (angle === \"left\") {\n      this.angle = -MathUtil.PI / 2;\n    } else if (angle === \"random\") {\n      this.angle = \"random\";\n    } else if (angle instanceof Span) {\n      this.angle = \"span\";\n      this.span = angle;\n    } else if (angle) {\n      this.angle = angle;\n    }\n\n    if (\n      String(force).toLowerCase() === \"changing\" ||\n      String(force).toLowerCase() === \"chang\" ||\n      String(force).toLowerCase() === \"auto\"\n    ) {\n      this.force = CHANGING;\n    } else if (force) {\n      this.force = force;\n    }\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(angle, force, life, easing) {\n    this.angle = MathUtil.PI / 2;\n    this.setAngleAndForce(angle, force);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    if (this.angle === \"random\") {\n      particle.data.cangle = MathUtil.randomAToB(-MathUtil.PI, MathUtil.PI);\n    } else if (this.angle === \"span\") {\n      particle.data.cangle = this.span.getValue();\n    }\n\n    particle.data.cyclone = new Vector2D(0, 0);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    let length;\n    let gradient = particle.v.getGradient();\n    if (this.angle === \"random\" || this.angle === \"span\") {\n      gradient += particle.data.cangle;\n    } else {\n      gradient += this.angle;\n    }\n\n    if (this.force === CHANGING) {\n      length = particle.v.length() / 100;\n    } else {\n      length = this.force;\n    }\n\n    particle.data.cyclone.x = length * Math.cos(gradient);\n    particle.data.cyclone.y = length * Math.sin(gradient);\n    particle.data.cyclone = this.normalizeForce(particle.data.cyclone);\n    particle.a.add(particle.data.cyclone);\n  }\n}\n","import Attraction from './Attraction';\n\nexport default class Repulsion extends Attraction {\n\n\t/**\n\t * The oppisite of Proton.Attraction - turns the force\n\t *\n\t * @memberof! Proton#\n\t * @augments Proton#Proton.Attraction\n\t * @constructor\n\t * @alias Proton.Repulsion\n\t *\n\t * @todo add description for 'force' and 'radius'\n\t *\n\t * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n\t * @param {Number} [force=100]\n\t * @param {Number} [radius=1000]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {Number} force\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(targetPosition, force, radius, life, easing) {\n\t\tsuper(targetPosition, force, radius, life, easing);\n\n\t\tthis.force *= -1;\n\t\tthis.name = 'Repulsion';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Repulsion\n\t * @instance\n\t *\n\t * @todo add description for 'force' and 'radius'\n\t *\n\t * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n\t * @param {Number} [force=100]\n\t * @param {Number} [radius=1000]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(targetPosition, force, radius, life, easing) {\n\t\tsuper.reset(targetPosition, force, radius, life, easing);\n\t\tthis.force *= -1;\n\t}\n}\n","import Util from '../utils/Util';\nimport Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class GravityWell extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Behaviour\n\t * @constructor\n\t * @alias GravityWell\n\t *\n\t * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n\t * @param {Number} [force=100]\t\t\t\t\tThe force\n\t * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n\t * @param {String} [easing=easeLinear]\tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(centerPoint, force, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.distanceVec = new Vector2D();\n\t\tthis.centerPoint = Util.initValue(centerPoint, new Vector2D);\n\t\tthis.force = Util.initValue(this.normalizeValue(force), 100);\n\n\t\tthis.name = 'GravityWell';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#GravityWell\n\t * @instance\n\t *\n\t * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n\t * @param {Number} [force=100]\t\t\t\t\tThe force\n\t * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n\t * @param {String} [easing=easeLinear]\tthis behaviour's easing\n\t */\n\treset(centerPoint, force, life, easing) {\n\t\tthis.distanceVec = new Vector2D();\n\t\tthis.centerPoint = Util.initValue(centerPoint, new Vector2D);\n\t\tthis.force = Util.initValue(this.normalizeValue(force), 100);\n\n\t\tlife && super.reset(life, easing);\n\t};\n\n\t/**\n\t * @inheritdoc\n\t */\n\tinitialize(particle) {\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#GravityWell\n\t * @instance\n\t *\n\t * @param {Particle} particle\n\t * @param {Number} the integrate time 1/ms\n\t * @param {Int} the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.distanceVec.set(this.centerPoint.x - particle.p.x, this.centerPoint.y - particle.p.y);\n\t\tconst distanceSq = this.distanceVec.lengthSq();\n\n\t\tif (distanceSq !== 0) {\n\t\t\tconst distance = this.distanceVec.length();\n\t\t\tconst factor = (this.force * time) / (distanceSq * distance);\n\n\t\t\tparticle.v.x += factor * this.distanceVec.x;\n\t\t\tparticle.v.y += factor * this.distanceVec.y;\n\t\t}\n\t}\n}","import Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default {\n  initialize(emitter, particle, initializes) {\n    const length = initializes.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      if (initializes[i] instanceof Initialize) {\n        initializes[i].init(emitter, particle);\n      } else {\n        this.init(emitter, particle, initializes[i]);\n      }\n    }\n\n    this.bindEmitter(emitter, particle);\n  },\n\n  // init\n  init(emitter, particle, initialize) {\n    Util.setProp(particle, initialize);\n    Util.setVectorVal(particle, initialize);\n  },\n\n  bindEmitter(emitter, particle) {\n    if (emitter.bindEmitter) {\n      particle.p.add(emitter.p);\n      particle.v.add(emitter.v);\n      particle.a.add(emitter.a);\n\n      particle.v.rotate(MathUtil.degreeTransform(emitter.rotation));\n    }\n  }\n};\n","import Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\nimport Particle from \"../core/Particle\";\nimport EventDispatcher from \"../events/EventDispatcher\";\n\nimport Rate from \"../initialize/Rate\";\nimport InitializeUtil from \"../initialize/InitializeUtil\";\n\nexport default class Emitter extends Particle {\n  /**\n   * You can use this emit particles.\n   *\n   * It will dispatch follow events:\n   * PARTICLE_CREATED\n   * PARTICLE_UPDATA\n   * PARTICLE_DEAD\n   *\n   * @class Emitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   * for example {damping:0.01,bindEmitter:false}\n   */\n  constructor(conf = {}) {\n    super(conf);\n\n    this.particles = [];\n    this.behaviours = [];\n    this.initializes = [];\n\n    this.emitTime = 0;\n    this.emitSpeed = 0;\n    this.totalTime = -1;\n\n    /**\n     * The friction coefficient for all particle emit by This;\n     * @property damping\n     * @type {Number}\n     * @default 0.006\n     */\n    this.damping = 0.006;\n\n    /**\n     * If bindEmitter the particles can bind this emitter's property;\n     * @property bindEmitter\n     * @type {Boolean}\n     * @default true\n     */\n    this.bindEmitter = true;\n\n    /**\n     * The number of particles per second emit (a [particle]/b [s]);\n     * @property rate\n     * @type {Rate}\n     * @default Rate(1, .1)\n     */\n    this.rate = new Rate(1, 0.1);\n\n    this.name = \"Emitter\";\n    this.id = Puid.id(this.name);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   * @param {Number} emitTime begin emit time;\n   * @param {String} life the life of this emitter\n   */\n  emit(totalTime, life) {\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = Util.initValue(totalTime, Infinity);\n\n    if (life === true || life === \"life\" || life === \"destroy\") {\n      this.life = totalTime === \"once\" ? 1 : this.totalTime;\n    } else if (!isNaN(life)) {\n      this.life = life;\n    }\n\n    this.rate.init();\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this.totalTime = -1;\n    this.emitTime = 0;\n    this.stoped = true;\n  }\n\n  preEmit(time) {\n    let oldStoped = this.stoped;\n    let oldEmitTime = this.emitTime;\n    let oldTotalTime = this.totalTime;\n\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = time;\n    this.rate.init();\n\n    const step = 0.0167;\n    while (time > step) {\n      time -= step;\n      this.update(step);\n    }\n\n    this.stoped = oldStoped;\n    this.emitTime = oldEmitTime + Math.max(time, 0);\n    this.totalTime = oldTotalTime;\n  }\n\n  /**\n   * remove current all particles\n   * @method removeAllParticles\n   */\n  removeAllParticles() {\n    let i = this.particles.length;\n    while (i--) this.particles[i].dead = true;\n  }\n\n  /**\n   * add initialize to this emitter\n   * @method addSelfInitialize\n   */\n  addSelfInitialize(initialize) {\n    if (initialize[\"init\"]) {\n      initialize.init(this);\n    } else {\n      this.initAll();\n    }\n  }\n\n  /**\n   * add the Initialize to particles;\n   *\n   * you can use initializes array:for example emitter.addInitialize(initialize1,initialize2,initialize3);\n   * @method addInitialize\n   * @param {Initialize} initialize like this new Radius(1, 12)\n   */\n  addInitialize(...rest) {\n    let i = rest.length;\n    while (i--) this.initializes.push(rest[i]);\n  }\n\n  /**\n   * remove the Initialize\n   * @method removeInitialize\n   * @param {Initialize} initialize a initialize\n   */\n  removeInitialize(initializer) {\n    const index = this.initializes.indexOf(initializer);\n    if (index > -1) this.initializes.splice(index, 1);\n  }\n\n  /**\n   * remove all Initializes\n   * @method removeInitializers\n   */\n  removeAllInitializers() {\n    Util.emptyArray(this.initializes);\n  }\n\n  /**\n   * add the Behaviour to particles;\n   *\n   * you can use Behaviours array:emitter.addBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addBehaviour\n   * @param {Behaviour} behaviour like this new Color('random')\n   */\n  addBehaviour(...rest) {\n    let i = arguments.length;\n    while (i--) {\n      let behaviour = rest[i];\n      this.behaviours.push(behaviour);\n      if (behaviour.parents) behaviour.parents.push(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour\n   * @method removeBehaviour\n   * @param {Behaviour} behaviour a behaviour\n   */\n  removeBehaviour(behaviour) {\n    let index = this.behaviours.indexOf(behaviour);\n    this.behaviours.splice(index, 1);\n\n    if (behaviour.parents) {\n      index = behaviour.parents.indexOf(behaviour);\n      behaviour.parents.splice(index, 1);\n    }\n\n    return index;\n  }\n\n  /**\n   * remove all behaviours\n   * @method removeAllBehaviours\n   */\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  // emitter update\n  update(time) {\n    this.age += time;\n    if (this.age >= this.life || this.dead) this.destroy();\n\n    this.emitting(time);\n    this.integrate(time);\n  }\n\n  integrate(time) {\n    if (!this.parent) return;\n\n    const damping = 1 - this.damping;\n    this.parent.integrator.calculate(this, time, damping);\n\n    const length = this.particles.length;\n    let i, particle;\n\n    for (i = length - 1; i >= 0; i--) {\n      particle = this.particles[i];\n\n      // particle update\n      particle.update(time, i);\n      this.parent.integrator.calculate(particle, time, damping);\n      this.dispatch(\"PARTICLE_UPDATE\", particle);\n\n      // check dead\n      if (particle.dead) {\n        this.dispatch(\"PARTICLE_DEAD\", particle);\n\n        this.parent.pool.expire(particle);\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  dispatch(event, target) {\n    this.parent && this.parent.dispatchEvent(event, target);\n    this.bindEvent && this.dispatchEvent(event, target);\n  }\n\n  emitting(time) {\n    if (this.totalTime === \"once\") {\n      let i;\n      const length = this.rate.getValue(99999);\n\n      if (length > 0) this.emitSpeed = length;\n      for (i = 0; i < length; i++) this.createParticle();\n      this.totalTime = \"none\";\n    } else {\n      this.emitTime += time;\n\n      if (this.emitTime < this.totalTime) {\n        const length = this.rate.getValue(time);\n        let i;\n\n        if (length > 0) this.emitSpeed = length;\n        for (i = 0; i < length; i++) this.createParticle();\n      }\n    }\n  }\n\n  /**\n   * create single particle;\n   *\n   * can use emit({x:10},new Gravity(10),{'particleUpdate',fun}) or emit([{x:10},new Initialize],new Gravity(10),{'particleUpdate',fun})\n   * @method removeAllParticles\n   */\n  createParticle(initialize, behaviour) {\n    const particle = this.parent.pool.get(Particle);\n    this.setupParticle(particle, initialize, behaviour);\n    this.dispatch(\"PARTICLE_CREATED\", particle);\n\n    return particle;\n  }\n\n  setupParticle(particle, initialize, behaviour) {\n    let initializes = this.initializes;\n    let behaviours = this.behaviours;\n\n    if (initialize) initializes = Util.toArray(initialize);\n    if (behaviour) behaviours = Util.toArray(behaviour);\n\n    particle.reset();\n    InitializeUtil.initialize(this, particle, initializes);\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n\n    this.particles.push(particle);\n  }\n\n  remove() {\n    this.stop();\n    Util.destroyAll(this.particles);\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    this.dead = true;\n    this.remove();\n    this.removeAllInitializers();\n    this.removeAllBehaviours();\n    this.parent && this.parent.removeEmitter(this);\n  }\n}\n\nEventDispatcher.bind(Emitter);\n","import Emitter from \"./Emitter\";\n\nexport default class BehaviourEmitter extends Emitter {\n  /**\n   * The BehaviourEmitter class inherits from Proton.Emitter\n   *\n   * use the BehaviourEmitter you can add behaviours to self;\n   * @class Proton.BehaviourEmitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   */\n  constructor(conf) {\n    super(conf);\n\n    this.selfBehaviours = [];\n  }\n\n  /**\n   * add the Behaviour to emitter;\n   *\n   * you can use Behaviours array:emitter.addSelfBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addSelfBehaviour\n   * @param {Proton.Behaviour} behaviour like this new Proton.Color('random')\n   */\n  addSelfBehaviour(...rest) {\n    let i,\n      length = rest.length;\n\n    for (i = 0; i < length; i++) {\n      let behaviour = rest[i];\n      this.selfBehaviours.push(behaviour);\n      behaviour.initialize(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour for self\n   * @method removeSelfBehaviour\n   * @param {Proton.Behaviour} behaviour a behaviour\n   */\n  removeSelfBehaviour(behaviour) {\n    const index = this.selfBehaviours.indexOf(behaviour);\n    if (index > -1) this.selfBehaviours.splice(index, 1);\n  }\n\n  update(time) {\n    super.update(time);\n\n    if (!this.sleep) {\n      const length = this.selfBehaviours.length;\n      let i;\n\n      for (i = 0; i < length; i++) {\n        this.selfBehaviours[i].applyBehaviour(this, time, i);\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Emitter from \"./Emitter\";\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from Proton.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class Proton.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} conf the parameters object;\n   */\n  constructor(mouseTarget, ease, conf) {\n    super(conf);\n\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    this.mousemoveHandler = e => this.mousemove.call(this, e);\n    this.mousedownHandler = e => this.mousedown.call(this, e);\n    this.mouseupHandler = e => this.mouseup.call(this, e);\n\n    this.mouseTarget.addEventListener(\n      \"mousemove\",\n      this.mousemoveHandler,\n      false\n    );\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this._allowEmitting = false;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX === 0) {\n      this.p.x += (e.layerX - this.p.x) * this.ease;\n      this.p.y += (e.layerY - this.p.y) * this.ease;\n    } else if (e.offsetX || e.offsetX === 0) {\n      this.p.x += (e.offsetX - this.p.x) * this.ease;\n      this.p.y += (e.offsetY - this.p.y) * this.ease;\n    }\n\n    if (this._allowEmitting) super.emit(\"once\");\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\n      \"mousemove\",\n      this.mousemoveHandler,\n      false\n    );\n  }\n}\n","import Pool from \"../core/Pool\";\n\nexport default class BaseRenderer {\n    constructor(element, stroke) {\n        this.pool = new Pool();\n        this.element = element;\n        this.stroke = stroke;\n        this.circleConf = { isCircle: true };\n\n        this.initHandler();\n        this.name = \"BaseRenderer\";\n    }\n\n    setStroke(color = \"#000000\", thinkness = 1) {\n        this.stroke = { color, thinkness };\n    }\n\n    initHandler() {\n        this._protonUpdateHandler = () => {\n            this.onProtonUpdate.call(this);\n        };\n\n        this._protonUpdateAfterHandler = () => {\n            this.onProtonUpdateAfter.call(this);\n        };\n\n        this._emitterAddedHandler = emitter => {\n            this.onEmitterAdded.call(this, emitter);\n        };\n\n        this._emitterRemovedHandler = emitter => {\n            this.onEmitterRemoved.call(this, emitter);\n        };\n\n        this._particleCreatedHandler = particle => {\n            this.onParticleCreated.call(this, particle);\n        };\n\n        this._particleUpdateHandler = particle => {\n            this.onParticleUpdate.call(this, particle);\n        };\n\n        this._particleDeadHandler = particle => {\n            this.onParticleDead.call(this, particle);\n        };\n    }\n\n    init(proton) {\n        this.parent = proton;\n\n        proton.addEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n        proton.addEventListener(\n            \"PROTON_UPDATE_AFTER\",\n            this._protonUpdateAfterHandler\n        );\n\n        proton.addEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n        proton.addEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n        proton.addEventListener(\n            \"PARTICLE_CREATED\",\n            this._particleCreatedHandler\n        );\n        proton.addEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n        proton.addEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n    }\n\n    resize(width, height) {}\n\n    destroy() {\n        this.remove();\n    }\n\n    remove(proton) {\n        this.parent.removeEventListener(\n            \"PROTON_UPDATE\",\n            this._protonUpdateHandler\n        );\n        this.parent.removeEventListener(\n            \"PROTON_UPDATE_AFTER\",\n            this._protonUpdateAfterHandler\n        );\n\n        this.parent.removeEventListener(\n            \"EMITTER_ADDED\",\n            this._emitterAddedHandler\n        );\n        this.parent.removeEventListener(\n            \"EMITTER_REMOVED\",\n            this._emitterRemovedHandler\n        );\n\n        this.parent.removeEventListener(\n            \"PARTICLE_CREATED\",\n            this._particleCreatedHandler\n        );\n        this.parent.removeEventListener(\n            \"PARTICLE_UPDATE\",\n            this._particleUpdateHandler\n        );\n        this.parent.removeEventListener(\n            \"PARTICLE_DEAD\",\n            this._particleDeadHandler\n        );\n\n        this.parent = null;\n    }\n\n    onProtonUpdate() {}\n    onProtonUpdateAfter() {}\n\n    onEmitterAdded(emitter) {}\n    onEmitterRemoved(emitter) {}\n\n    onParticleCreated(particle) {}\n    onParticleUpdate(particle) {}\n    onParticleDead(particle) {}\n}\n","import ImgUtil from \"../utils/ImgUtil\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class CanvasRenderer extends BaseRenderer {\n    constructor(element) {\n        super(element);\n\n        this.stroke = null;\n        this.context = this.element.getContext(\"2d\");\n        this.bufferCache = {};\n        this.name = \"CanvasRenderer\";\n    }\n\n    resize(width, height) {\n        this.element.width = width;\n        this.element.height = height;\n    }\n\n    onProtonUpdate() {\n        this.context.clearRect(0, 0, this.element.width, this.element.height);\n    }\n\n    onParticleCreated(particle) {\n        if (particle.body) {\n            ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n        } else {\n            particle.color = particle.color || \"#ff0000\";\n        }\n    }\n\n    onParticleUpdate(particle) {\n        if (particle.body) {\n            if (particle.body instanceof Image) this.drawImage(particle);\n        } else {\n            this.drawCircle(particle);\n        }\n    }\n\n    onParticleDead(particle) {\n        particle.body = null;\n    }\n\n    // private\n    addImg2Body(img, particle) {\n        particle.body = img;\n    }\n\n    // private drawCircle\n    drawImage(particle) {\n        const w = (particle.body.width * particle.scale) | 0;\n        const h = (particle.body.height * particle.scale) | 0;\n        const x = particle.p.x - w / 2;\n        const y = particle.p.y - h / 2;\n\n        if (!!particle.color) {\n            if (!particle.data[\"buffer\"])\n                particle.data.buffer = this.createBuffer(particle.body);\n\n            const bufContext = particle.data.buffer.getContext(\"2d\");\n            bufContext.clearRect(\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height\n            );\n            bufContext.globalAlpha = particle.alpha;\n            bufContext.drawImage(particle.body, 0, 0);\n\n            bufContext.globalCompositeOperation = \"source-atop\";\n            bufContext.fillStyle = ColorUtil.rgbToHex(particle.rgb);\n            bufContext.fillRect(\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height\n            );\n            bufContext.globalCompositeOperation = \"source-over\";\n            bufContext.globalAlpha = 1;\n\n            this.context.drawImage(\n                particle.data.buffer,\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height,\n                x,\n                y,\n                w,\n                h\n            );\n        } else {\n            this.context.save();\n\n            this.context.globalAlpha = particle.alpha;\n            this.context.translate(particle.p.x, particle.p.y);\n            this.context.rotate(MathUtil.degreeTransform(particle.rotation));\n            this.context.translate(-particle.p.x, -particle.p.y);\n            this.context.drawImage(\n                particle.body,\n                0,\n                0,\n                particle.body.width,\n                particle.body.height,\n                x,\n                y,\n                w,\n                h\n            );\n\n            this.context.globalAlpha = 1;\n            this.context.restore();\n        }\n    }\n\n    // private drawCircle --\n    drawCircle(particle) {\n        if (particle.rgb) {\n            this.context.fillStyle = `rgba(${particle.rgb.r},${particle.rgb.g},${particle.rgb.b},${particle.alpha})`;\n        } else {\n            this.context.fillStyle = particle.color;\n        }\n\n        // draw circle\n        this.context.beginPath();\n        this.context.arc(\n            particle.p.x,\n            particle.p.y,\n            particle.radius,\n            0,\n            Math.PI * 2,\n            true\n        );\n\n        if (this.stroke) {\n            this.context.strokeStyle = this.stroke.color;\n            this.context.lineWidth = this.stroke.thinkness;\n            this.context.stroke();\n        }\n\n        this.context.closePath();\n        this.context.fill();\n    }\n\n    // private createBuffer\n    createBuffer(image) {\n        if (image instanceof Image) {\n            const size = image.width + \"_\" + image.height;\n            let canvas = this.bufferCache[size];\n\n            if (!canvas) {\n                canvas = document.createElement(\"canvas\");\n                canvas.width = image.width;\n                canvas.height = image.height;\n                this.bufferCache[size] = canvas;\n            }\n\n            return canvas;\n        }\n    }\n}\n","import DomUtil from \"../utils/DomUtil\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class DomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.transform3d = false;\n    this.name = \"DomRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n      this.element.appendChild(particle.body);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    if (this.bodyReady(particle)) {\n      if (this.transform3d)\n        DomUtil.transform3d(\n          particle.body,\n          particle.p.x,\n          particle.p.y,\n          particle.scale,\n          particle.rotation\n        );\n      else\n        DomUtil.transform(\n          particle.body,\n          particle.p.x,\n          particle.p.y,\n          particle.scale,\n          particle.rotation\n        );\n\n      particle.body.style.opacity = particle.alpha;\n      if (particle.body.isCircle) {\n        particle.body.style.backgroundColor = particle.color || \"#ff0000\";\n      }\n    }\n  }\n\n  onParticleDead(particle) {\n    if (this.bodyReady(particle)) {\n      this.element.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n  }\n\n  bodyReady(particle) {\n    return (\n      typeof particle.body === \"object\" &&\n      particle.body &&\n      !particle.body.isInner\n    );\n  }\n\n  // private\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = this.pool.get(img, particle);\n    DomUtil.resize(particle.body, img.width, img.height);\n\n    this.element.appendChild(particle.body);\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body, particle);\n  }\n\n  // private --\n  createCircle(particle) {\n    const dom = DomUtil.createDiv(\n      `${particle.id}_dom`,\n      2 * particle.radius,\n      2 * particle.radius\n    );\n    dom.style.borderRadius = `${particle.radius}px`;\n\n    if (this.stroke) {\n      dom.style.borderColor = this.stroke.color;\n      dom.style.borderWidth = `${this.stroke.thinkness}px`;\n    }\n    dom.isCircle = true;\n\n    return dom;\n  }\n\n  createSprite(body, particle) {\n    const url = typeof body === \"string\" ? body : body.src;\n    const dom = DomUtil.createDiv(\n      `${particle.id}_dom`,\n      body.width,\n      body.height\n    );\n    dom.style.backgroundImage = `url(${url})`;\n\n    return dom;\n  }\n}\n","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class EaselRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.name = \"EaselRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      this.createSprite(particle);\n    } else {\n      this.createCircle(particle);\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      particle.body.x = particle.p.x;\n      particle.body.y = particle.p.y;\n\n      particle.body.alpha = particle.alpha;\n      particle.body.scaleX = particle.body.scaleY = particle.scale;\n      particle.body.rotation = particle.rotation;\n    }\n  }\n\n  onParticleDead(particle) {\n    if (particle.body) {\n      particle.body.parent && particle.body.parent.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n\n    if (particle.graphics) this.pool.expire(particle.graphics);\n  }\n\n  // private\n  createSprite(particle) {\n    particle.body = this.pool.get(particle.body);\n\n    if (particle.body.parent) return;\n    if (particle.body[\"image\"]) {\n      particle.body.regX = particle.body.image.width / 2;\n      particle.body.regY = particle.body.image.height / 2;\n    }\n  }\n\n  createCircle(particle) {\n    const graphics = this.pool.get(createjs.Graphics);\n\n    if (this.stroke) {\n      if (this.stroke instanceof String) graphics.beginStroke(this.stroke);\n      else graphics.beginStroke(\"#000000\");\n    }\n    graphics\n      .beginFill(particle.color || \"#ff0000\")\n      .drawCircle(0, 0, particle.radius);\n\n    const shape = this.pool.get(createjs.Shape, [graphics]);\n\n    particle.body = shape;\n    particle.graphics = graphics;\n  }\n}\n","import Rectangle from \"../math/Rectangle\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class PixelRenderer extends BaseRenderer {\n  constructor(element, rectangle) {\n    super(element);\n\n    this.context = this.element.getContext(\"2d\");\n    this.imageData = null;\n    this.rectangle = null;\n    this.rectangle = rectangle;\n    this.createImageData(rectangle);\n\n    this.name = \"PixelRenderer\";\n  }\n\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  createImageData(rectangle) {\n    this.rectangle = rectangle\n      ? rectangle\n      : new Rectangle(0, 0, this.element.width, this.element.height);\n    this.imageData = this.context.createImageData(\n      this.rectangle.width,\n      this.rectangle.height\n    );\n    this.context.putImageData(\n      this.imageData,\n      this.rectangle.x,\n      this.rectangle.y\n    );\n  }\n\n  onProtonUpdate() {\n    this.context.clearRect(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n    this.imageData = this.context.getImageData(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n  }\n\n  onProtonUpdateAfter() {\n    this.context.putImageData(\n      this.imageData,\n      this.rectangle.x,\n      this.rectangle.y\n    );\n  }\n\n  onParticleCreated(particle) {}\n\n  onParticleUpdate(particle) {\n    if (this.imageData) {\n      this.setPixel(\n        this.imageData,\n        Math.floor(particle.p.x - this.rectangle.x),\n        Math.floor(particle.p.y - this.rectangle.y),\n        particle\n      );\n    }\n  }\n\n  setPixel(imagedata, x, y, particle) {\n    const rgb = particle.rgb;\n    if (x < 0 || x > this.element.width || y < 0 || y > this.elementwidth)\n      return;\n\n    const i = ((y >> 0) * imagedata.width + (x >> 0)) * 4;\n\n    imagedata.data[i] = rgb.r;\n    imagedata.data[i + 1] = rgb.g;\n    imagedata.data[i + 2] = rgb.b;\n    imagedata.data[i + 3] = particle.alpha * 255;\n  }\n\n  onParticleDead(particle) {}\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nlet PIXIClass;\nexport default class PixiRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.color = false;\n    this.setColor = false;\n    this.blendMode = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.setPIXI(window.PIXI);\n\n    this.name = \"PixiRenderer\";\n  }\n\n  setPIXI(PIXI) {\n    try {\n      PIXIClass = PIXI || { Sprite: {} };\n      this.createFromImage =\n        PIXIClass.Sprite.from || PIXIClass.Sprite.fromImage;\n    } catch (e) {}\n  }\n\n  onProtonUpdate() {}\n\n  /**\n   * @param particle\n   */\n  onParticleCreated(particle) {\n    if (particle.body) {\n      particle.body = this.pool.get(particle.body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n    }\n\n    if (this.blendMode) {\n      particle.body.blendMode = this.blendMode;\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleUpdate(particle) {\n    this.transform(particle, particle.body);\n\n    if (this.setColor === true || this.color === true) {\n      particle.body.tint = ColorUtil.getHex16FromParticle(particle);\n    }\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleDead(particle) {\n    this.element.removeChild(particle.body);\n    this.pool.expire(particle.body);\n    particle.body = null;\n  }\n\n  destroy(particles) {\n    super.destroy();\n    this.pool.destroy();\n\n    let i = particles.length;\n    while (i--) {\n      let particle = particles[i];\n      if (particle.body) {\n        this.element.removeChild(particle.body);\n      }\n    }\n  }\n\n  transform(particle, target) {\n    target.x = particle.p.x;\n    target.y = particle.p.y;\n\n    target.alpha = particle.alpha;\n\n    target.scale.x = particle.scale;\n    target.scale.y = particle.scale;\n\n    // using cached version of MathUtil.PI_180 for slight performance increase.\n    target.rotation = particle.rotation * MathUtil.PI_180; // MathUtil.PI_180;\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body);\n  }\n\n  createSprite(body) {\n    const sprite = body.isInner\n      ? this.createFromImage(body.src)\n      : new PIXIClass.Sprite(body);\n\n    sprite.anchor.x = 0.5;\n    sprite.anchor.y = 0.5;\n\n    return sprite;\n  }\n\n  createCircle(particle) {\n    const graphics = new PIXIClass.Graphics();\n\n    if (this.stroke) {\n      const stroke = this.stroke instanceof String ? this.stroke : 0x000000;\n      graphics.beginStroke(stroke);\n    }\n\n    graphics.beginFill(particle.color || 0x008ced);\n    graphics.drawCircle(0, 0, particle.radius);\n    graphics.endFill();\n\n    return graphics;\n  }\n}\n","import Mat3 from \"../math/Mat3\";\n\nexport default class MStack {\n  constructor() {\n    this.mats = [];\n    this.size = 0;\n\n    for (let i = 0; i < 20; i++)\n      this.mats.push(Mat3.create([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n  }\n\n  set(m, i) {\n    if (i === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[i - 1], m, this.mats[i]);\n\n    this.size = Math.max(this.size, i + 1);\n  }\n\n  push(m) {\n    if (this.size === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[this.size - 1], m, this.mats[this.size]);\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size > 0) this.size--;\n  }\n\n  top() {\n    return this.mats[this.size - 1];\n  }\n}\n","import Mat3 from '../math/Mat3';\nimport BaseRenderer from './BaseRenderer';\n\nimport Util from '../utils/Util';\nimport ImgUtil from '../utils/ImgUtil';\nimport MStack from '../utils/MStack';\nimport DomUtil from '../utils/DomUtil';\nimport WebGLUtil from '../utils/WebGLUtil';\nimport MathUtil from '../math/MathUtil';\n\nexport default class WebGLRenderer extends BaseRenderer {\n\n    constructor(element) {\n        super(element);\n\n        this.gl = this.element.getContext('experimental-webgl', { antialias: true, stencil: false, depth: false });\n        if (!this.gl) alert('Sorry your browser do not suppest WebGL!');\n\n        this.initVar();\n        this.setMaxRadius();\n        this.initShaders();\n        this.initBuffers();\n\n        this.gl.blendEquation(this.gl.FUNC_ADD);\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        this.gl.enable(this.gl.BLEND);\n\n        this.addImg2Body = this.addImg2Body.bind(this);\n\n        this.name = 'WebGLRenderer';\n    }\n\n    init(proton) {\n        super.init(proton);\n        this.resize(this.element.width, this.element.height);\n    }\n\n    resize(width, height) {\n        this.umat[4] = -2;\n        this.umat[7] = 1;\n\n        this.smat[0] = 1 / width;\n        this.smat[4] = 1 / height;\n\n        this.mstack.set(this.umat, 0);\n        this.mstack.set(this.smat, 1);\n\n        this.gl.viewport(0, 0, width, height);\n        this.element.width = width;\n        this.element.height = height;\n    }\n\n    setMaxRadius(radius) {\n        this.circleCanvasURL = this.createCircle(radius);\n    }\n\n    getVertexShader() {\n        const vsSource = ['uniform vec2 viewport;', 'attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform mat3 tMat;', 'varying vec2 vTextureCoord;', 'varying float alpha;', 'void main() {', 'vec3 v = tMat * vec3(aVertexPosition, 1.0);', 'gl_Position = vec4(v.x, v.y, 0, 1);', 'vTextureCoord = aTextureCoord;', 'alpha = tMat[0][2];', '}'].join('\\n');\n        return vsSource;\n    }\n\n    getFragmentShader() {\n        const fsSource = ['precision mediump float;', 'varying vec2 vTextureCoord;', 'varying float alpha;', 'uniform sampler2D uSampler;', 'uniform vec4 color;', 'uniform bool useTexture;', 'uniform vec3 uColor;', 'void main() {', 'vec4 textureColor = texture2D(uSampler, vTextureCoord);', 'gl_FragColor = textureColor * vec4(uColor, 1.0);', 'gl_FragColor.w *= alpha;', '}'].join('\\n');\n        return fsSource;\n    }\n\n    initVar() {\n        this.mstack = new MStack();\n        this.umat = Mat3.create([2, 0, 1, 0, -2, 0, -1, 1, 1]);\n        this.smat = Mat3.create([1 / 100, 0, 1, 0, 1 / 100, 0, 0, 0, 1]);\n        this.texturebuffers = {};\n    }\n\n    blendEquation(A) {\n        this.gl.blendEquation(this.gl[A]);\n    }\n\n    blendFunc(A, B) {\n        this.gl.blendFunc(this.gl[A], this.gl[B]);\n    }\n\n    getShader(gl, str, fs) {\n        const shader = fs ? gl.createShader(gl.FRAGMENT_SHADER) : gl.createShader(gl.VERTEX_SHADER);\n\n        gl.shaderSource(shader, str);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert(gl.getShaderInfoLog(shader));\n            return null;\n        }\n\n        return shader;\n    }\n\n    initShaders() {\n        const fragmentShader = this.getShader(this.gl, this.getFragmentShader(), true);\n        const vertexShader = this.getShader(this.gl, this.getVertexShader(), false);\n\n        this.sprogram = this.gl.createProgram();\n        this.gl.attachShader(this.sprogram, vertexShader);\n        this.gl.attachShader(this.sprogram, fragmentShader);\n        this.gl.linkProgram(this.sprogram);\n\n        if (!this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS))\n            alert('Could not initialise shaders');\n\n        this.gl.useProgram(this.sprogram);\n        this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, 'aVertexPosition');\n        this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, 'aTextureCoord');\n        this.gl.enableVertexAttribArray(this.sprogram.tca);\n        this.gl.enableVertexAttribArray(this.sprogram.vpa);\n\n        this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, 'tMat');\n        this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, 'uSampler');\n        this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, 'useTexture');\n        this.sprogram.color = this.gl.getUniformLocation(this.sprogram, 'uColor');\n        this.gl.uniform1i(this.sprogram.useTex, 1);\n    };\n\n    initBuffers() {\n        const vs = [0, 3, 1, 0, 2, 3];\n        let idx;\n\n        this.unitIBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vs), this.gl.STATIC_DRAW);\n\n        let i;\n        let ids = [];\n        for (i = 0; i < 100; i++) ids.push(i);\n        idx = new Uint16Array(ids);\n\n        this.unitI33 = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n\n        ids = [];\n        for (i = 0; i < 100; i++) ids.push(i, i + 1, i + 2);\n        idx = new Uint16Array(ids);\n\n        this.stripBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n    };\n\n    createCircle(raidus) {\n        this.circleCanvasRadius = WebGLUtil.nhpot(Util.initValue(raidus, 32));\n        const canvas = DomUtil.createCanvas('circle_canvas', this.circleCanvasRadius * 2, this.circleCanvasRadius * 2);\n        const context = canvas.getContext('2d');\n\n        context.beginPath();\n        context.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fillStyle = '#FFF';\n        context.fill();\n\n        return canvas.toDataURL();\n    };\n\n    drawImg2Canvas(particle) {\n        const _w = particle.body.width;\n        const _h = particle.body.height;\n\n        const _width = WebGLUtil.nhpot(particle.body.width);\n        const _height = WebGLUtil.nhpot(particle.body.height);\n\n        const _scaleX = particle.body.width / _width;\n        const _scaleY = particle.body.height / _height;\n\n        if (!this.texturebuffers[particle.data.src])\n            this.texturebuffers[particle.data.src] = [this.gl.createTexture(), this.gl.createBuffer(), this.gl.createBuffer()];\n\n        particle.data.texture = this.texturebuffers[particle.data.src][0];\n        particle.data.vcBuffer = this.texturebuffers[particle.data.src][1];\n        particle.data.tcBuffer = this.texturebuffers[particle.data.src][2];\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, _scaleX, 0.0, 0.0, _scaleY, _scaleY, _scaleY]), this.gl.STATIC_DRAW);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, _w, 0.0, 0.0, _h, _w, _h]), this.gl.STATIC_DRAW);\n\n        const context = particle.data.canvas.getContext('2d');\n        const data = context.getImageData(0, 0, _width, _height);\n\n        this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST);\n        this.gl.generateMipmap(this.gl.TEXTURE_2D);\n\n        particle.data.textureLoaded = true;\n        particle.data.textureWidth = _w;\n        particle.data.textureHeight = _h;\n    }\n\n    onProtonUpdate() {\n        // this.gl.clearColor(0, 0, 0, 1);\n        // this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n    }\n\n    onParticleCreated(particle) {\n        particle.data.textureLoaded = false;\n        particle.data.tmat = Mat3.create();\n        particle.data.tmat[8] = 1;\n        particle.data.imat = Mat3.create();\n        particle.data.imat[8] = 1;\n\n        if (particle.body) {\n            ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n        } else {\n            ImgUtil.getImgFromCache(this.circleCanvasURL, this.addImg2Body, particle);\n            particle.data.oldScale = particle.radius / this.circleCanvasRadius;\n        }\n    }\n\n    // private\n    addImg2Body(img, particle) {\n        if (particle.dead) return;\n        particle.body = img;\n        particle.data.src = img.src;\n        particle.data.canvas = ImgUtil.getCanvasFromCache(img);\n        particle.data.oldScale = 1;\n\n        this.drawImg2Canvas(particle);\n    }\n\n    onParticleUpdate(particle) {\n        if (particle.data.textureLoaded) {\n            this.updateMatrix(particle);\n\n            this.gl.uniform3f(this.sprogram.color, particle.rgb.r / 255, particle.rgb.g / 255, particle.rgb.b / 255);\n            this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, false, this.mstack.top());\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n            this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n            this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n            this.gl.uniform1i(this.sprogram.samplerUniform, 0);\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n\n            this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\n\n            this.mstack.pop();\n        }\n    }\n\n    onParticleDead(particle) { }\n\n    updateMatrix(particle) {\n        const moveOriginMatrix = WebGLUtil.makeTranslation(-particle.data.textureWidth / 2, -particle.data.textureHeight / 2);\n        const translationMatrix = WebGLUtil.makeTranslation(particle.p.x, particle.p.y);\n\n        const angel = particle.rotation * (MathUtil.PI_180);\n        const rotationMatrix = WebGLUtil.makeRotation(angel);\n\n        const scale = particle.scale * particle.data.oldScale;\n        const scaleMatrix = WebGLUtil.makeScale(scale, scale);\n        let matrix = WebGLUtil.matrixMultiply(moveOriginMatrix, scaleMatrix);\n\n        matrix = WebGLUtil.matrixMultiply(matrix, rotationMatrix);\n        matrix = WebGLUtil.matrixMultiply(matrix, translationMatrix);\n\n        Mat3.inverse(matrix, particle.data.imat);\n        matrix[2] = particle.alpha;\n\n        this.mstack.push(matrix);\n    }\n}","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class CustomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.name = \"CustomRenderer\";\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class LineZone extends Zone {\n  constructor(x1, y1, x2, y2, direction) {\n    super();\n\n    if (x2 - x1 >= 0) {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.x2 = x2;\n      this.y2 = y2;\n    } else {\n      this.x1 = x2;\n      this.y1 = y2;\n      this.x2 = x1;\n      this.y2 = y1;\n    }\n\n    this.dx = this.x2 - this.x1;\n    this.dy = this.y2 - this.y1;\n\n    this.minx = Math.min(this.x1, this.x2);\n    this.miny = Math.min(this.y1, this.y2);\n    this.maxx = Math.max(this.x1, this.x2);\n    this.maxy = Math.max(this.y1, this.y2);\n\n    this.dot = this.x2 * this.y1 - this.x1 * this.y2;\n    this.xxyy = this.dx * this.dx + this.dy * this.dy;\n\n    this.gradient = this.getGradient();\n    this.length = this.getLength();\n    this.direction = Util.initValue(direction, \">\");\n  }\n\n  getPosition() {\n    this.random = Math.random();\n\n    this.vector.x =\n      this.x1 + this.random * this.length * Math.cos(this.gradient);\n    this.vector.y =\n      this.y1 + this.random * this.length * Math.sin(this.gradient);\n\n    return this.vector;\n  }\n\n  getDirection(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = B === 0 ? 1 : B;\n\n    if ((A * x + B * y + C) * D > 0) return true;\n    else return false;\n  }\n\n  getDistance(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = A * x + B * y + C;\n\n    return D / Math.sqrt(this.xxyy);\n  }\n\n  getSymmetric(v) {\n    const tha2 = v.getGradient();\n    const tha1 = this.getGradient();\n    const tha = 2 * (tha1 - tha2);\n\n    const oldx = v.x;\n    const oldy = v.y;\n\n    v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n\n    return v;\n  }\n\n  getGradient() {\n    return Math.atan2(this.dy, this.dx);\n  }\n\n  rangeOut(particle) {\n    const angle = Math.abs(this.getGradient());\n\n    if (angle <= MathUtil.PI / 4) {\n      if (particle.p.x <= this.maxx && particle.p.x >= this.minx) return true;\n    } else {\n      if (particle.p.y <= this.maxy && particle.p.y >= this.miny) return true;\n    }\n\n    return false;\n  }\n\n  getLength() {\n    return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (\n        this.direction === \">\" ||\n        this.direction === \"R\" ||\n        this.direction === \"right\" ||\n        this.direction === \"down\"\n      ) {\n        if (!this.rangeOut(particle)) return;\n        if (this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      } else {\n        if (!this.rangeOut(particle)) return;\n        if (!this.getDirection(particle.p.x, particle.p.y))\n          particle.dead = true;\n      }\n    } else if (this.crossType === \"bound\") {\n      if (!this.rangeOut(particle)) return;\n\n      if (this.getDistance(particle.p.x, particle.p.y) <= particle.radius) {\n        if (this.dx === 0) {\n          particle.v.x *= -1;\n        } else if (this.dy === 0) {\n          particle.v.y *= -1;\n        } else {\n          this.getSymmetric(particle.v);\n        }\n      }\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, LineZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class CircleZone extends Zone {\n  constructor(x, y, radius) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n\n    this.angle = 0;\n    this.center = { x, y };\n  }\n\n  getPosition() {\n    this.angle = MathUtil.PIx2 * Math.random();\n    this.randomRadius = Math.random() * this.radius;\n\n    this.vector.x = this.x + this.randomRadius * Math.cos(this.angle);\n    this.vector.y = this.y + this.randomRadius * Math.sin(this.angle);\n\n    return this.vector;\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  crossing(particle) {\n    const d = particle.p.distanceTo(this.center);\n\n    if (this.crossType === \"dead\") {\n      if (d - particle.radius > this.radius) particle.dead = true;\n    } else if (this.crossType === \"bound\") {\n      if (d + particle.radius >= this.radius) this.getSymmetric(particle);\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, CircleZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n\n  getSymmetric(particle) {\n    let tha2 = particle.v.getGradient();\n    let tha1 = this.getGradient(particle);\n\n    let tha = 2 * (tha1 - tha2);\n    let oldx = particle.v.x;\n    let oldy = particle.v.y;\n\n    particle.v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    particle.v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n  }\n\n  getGradient(particle) {\n    return (\n      -MathUtil.PI_2 +\n      Math.atan2(particle.p.y - this.center.y, particle.p.x - this.center.x)\n    );\n  }\n}\n","import Zone from \"./Zone\";\n\nexport default class RectZone extends Zone {\n  constructor(x, y, width, height) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getPosition() {\n    this.vector.x = this.x + Math.random() * this.width;\n    this.vector.y = this.y + Math.random() * this.height;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    // particle dead zone\n    if (this.crossType === \"dead\") {\n      if (particle.p.x + particle.radius < this.x) particle.dead = true;\n      else if (particle.p.x - particle.radius > this.x + this.width)\n        particle.dead = true;\n\n      if (particle.p.y + particle.radius < this.y) particle.dead = true;\n      else if (particle.p.y - particle.radius > this.y + this.height)\n        particle.dead = true;\n    }\n\n    // particle bound zone\n    else if (this.crossType === \"bound\") {\n      if (particle.p.x - particle.radius < this.x) {\n        particle.p.x = this.x + particle.radius;\n        particle.v.x *= -1;\n      } else if (particle.p.x + particle.radius > this.x + this.width) {\n        particle.p.x = this.x + this.width - particle.radius;\n        particle.v.x *= -1;\n      }\n\n      if (particle.p.y - particle.radius < this.y) {\n        particle.p.y = this.y + particle.radius;\n        particle.v.y *= -1;\n      } else if (particle.p.y + particle.radius > this.y + this.height) {\n        particle.p.y = this.y + this.height - particle.radius;\n        particle.v.y *= -1;\n      }\n    }\n\n    // particle cross zone\n    else if (this.crossType === \"cross\") {\n      if (particle.p.x + particle.radius < this.x && particle.v.x <= 0)\n        particle.p.x = this.x + this.width + particle.radius;\n      else if (\n        particle.p.x - particle.radius > this.x + this.width &&\n        particle.v.x >= 0\n      )\n        particle.p.x = this.x - particle.radius;\n\n      if (particle.p.y + particle.radius < this.y && particle.v.y <= 0)\n        particle.p.y = this.y + this.height + particle.radius;\n      else if (\n        particle.p.y - particle.radius > this.y + this.height &&\n        particle.v.y >= 0\n      )\n        particle.p.y = this.y - particle.radius;\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\n\nexport default class ImageZone extends Zone {\n  constructor(imageData, x, y, d) {\n    super();\n\n    this.reset(imageData, x, y, d);\n  }\n\n  reset(imageData, x, y, d) {\n    this.imageData = imageData;\n    this.x = Util.initValue(x, 0);\n    this.y = Util.initValue(y, 0);\n    this.d = Util.initValue(d, 2);\n\n    this.vectors = [];\n    this.setVectors();\n  }\n\n  setVectors() {\n    let i, j;\n    const length1 = this.imageData.width;\n    const length2 = this.imageData.height;\n\n    for (i = 0; i < length1; i += this.d) {\n      for (j = 0; j < length2; j += this.d) {\n        let index = ((j >> 0) * length1 + (i >> 0)) * 4;\n\n        if (this.imageData.data[index + 3] > 0) {\n          this.vectors.push({ x: i + this.x, y: j + this.y });\n        }\n      }\n    }\n\n    return this.vector;\n  }\n\n  getBound(x, y) {\n    var index = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n    if (this.imageData.data[index + 3] > 0) return true;\n    else return false;\n  }\n\n  getPosition() {\n    const vector = Util.getRandFromArray(this.vectors);\n    return this.vector.copy(vector);\n  }\n\n  getColor(x, y) {\n    x -= this.x;\n    y -= this.y;\n    var i = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n\n    return {\n      r: this.imageData.data[i],\n      g: this.imageData.data[i + 1],\n      b: this.imageData.data[i + 2],\n      a: this.imageData.data[i + 3]\n    };\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (this.getBound(particle.p.x - this.x, particle.p.y - this.y))\n        particle.dead = true;\n      else particle.dead = false;\n    } else if (this.crossType === \"bound\") {\n      if (!this.getBound(particle.p.x - this.x, particle.p.y - this.y))\n        particle.v.negate();\n    }\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport CircleZone from \"../zone/CircleZone\";\nimport PointZone from \"../zone/PointZone\";\nimport LineZone from \"../zone/LineZone\";\nimport RectZone from \"../zone/RectZone\";\n\nexport default {\n  addEventListener(proton, func) {\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", () => func());\n  },\n\n  getStyle(color = \"#ff0000\") {\n    const rgb = ColorUtil.hexToRgb(color);\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.5)`;\n  },\n\n  drawZone(proton, canvas, zone, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (zone instanceof PointZone) {\n        context.beginPath();\n        context.fillStyle = style;\n        context.arc(zone.x, zone.y, 10, 0, Math.PI * 2, true);\n        context.fill();\n        context.closePath();\n      } else if (zone instanceof LineZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.moveTo(zone.x1, zone.y1);\n        context.lineTo(zone.x2, zone.y2);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof RectZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.drawRect(zone.x, zone.y, zone.width, zone.height);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof CircleZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.arc(zone.x, zone.y, zone.radius, 0, Math.PI * 2, true);\n        context.stroke();\n        context.closePath();\n      }\n    });\n  },\n\n  drawEmitter(proton, canvas, emitter, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      context.beginPath();\n      context.fillStyle = style;\n      context.arc(emitter.p.x, emitter.p.y, 10, 0, Math.PI * 2, true);\n      context.fill();\n      context.closePath();\n    });\n  }\n};\n","import Proton from \"./core/Proton\";\nimport Particle from \"./core/Particle\";\nimport Pool from \"./core/Pool\";\n\nimport Util from \"./utils/Util\";\nimport ColorUtil from \"./utils/ColorUtil\";\nimport MathUtil from \"./math/MathUtil\";\nimport Vector2D from \"./math/Vector2D\";\nimport Polar2D from \"./math/Polar2D\";\nimport Mat3 from \"./math/Mat3\";\nimport Span from \"./math/Span\";\nimport ArraySpan from \"./math/ArraySpan\";\nimport Rectangle from \"./math/Rectangle\";\nimport ease from \"./math/ease\";\n\nimport Rate from \"./initialize/Rate\";\nimport Initialize from \"./initialize/Initialize\";\nimport Life from \"./initialize/Life\";\nimport Position from \"./initialize/Position\";\nimport Velocity from \"./initialize/Velocity\";\nimport Mass from \"./initialize/Mass\";\nimport Radius from \"./initialize/Radius\";\nimport Body from \"./initialize/Body\";\n\nimport Behaviour from \"./behaviour/Behaviour\";\nimport Force from \"./behaviour/Force\";\nimport Attraction from \"./behaviour/Attraction\";\nimport RandomDrift from \"./behaviour/RandomDrift\";\nimport Gravity from \"./behaviour/Gravity\";\nimport Collision from \"./behaviour/Collision\";\nimport CrossZone from \"./behaviour/CrossZone\";\nimport Alpha from \"./behaviour/Alpha\";\nimport Scale from \"./behaviour/Scale\";\nimport Rotate from \"./behaviour/Rotate\";\nimport Color from \"./behaviour/Color\";\nimport Cyclone from \"./behaviour/Cyclone\";\nimport Repulsion from \"./behaviour/Repulsion\";\nimport GravityWell from \"./behaviour/GravityWell\";\n\nimport Emitter from \"./emitter/Emitter\";\nimport BehaviourEmitter from \"./emitter/BehaviourEmitter\";\nimport FollowEmitter from \"./emitter/FollowEmitter\";\n\nimport CanvasRenderer from \"./render/CanvasRenderer\";\nimport DomRenderer from \"./render/DomRenderer\";\nimport EaselRenderer from \"./render/EaselRenderer\";\nimport PixelRenderer from \"./render/PixelRenderer\";\nimport PixiRenderer from \"./render/PixiRenderer\";\nimport WebGLRenderer from \"./render/WebGLRenderer\";\nimport CustomRenderer from \"./render/CustomRenderer\";\n\nimport Zone from \"./zone/Zone\";\nimport LineZone from \"./zone/LineZone\";\nimport CircleZone from \"./zone/CircleZone\";\nimport PointZone from \"./zone/PointZone\";\nimport RectZone from \"./zone/RectZone\";\nimport ImageZone from \"./zone/ImageZone\";\n\nimport Debug from \"./debug/Debug\";\n\n// namespace\nProton.Particle = Particle;\nProton.Pool = Pool;\n\nProton.Util = Util;\nProton.ColorUtil = ColorUtil;\nProton.MathUtil = MathUtil;\nProton.Vector2D = Proton.Vector = Vector2D;\nProton.Polar2D = Proton.Polar = Polar2D;\nProton.ArraySpan = ArraySpan;\nProton.Rectangle = Rectangle;\nProton.Rate = Rate;\nProton.ease = ease;\nProton.Span = Span;\nProton.Mat3 = Mat3;\nProton.getSpan = (a, b, center) => new Span(a, b, center);\nProton.createArraySpan = ArraySpan.createArraySpan;\n\nProton.Initialize = Proton.Init = Initialize;\nProton.Life = Proton.L = Life;\nProton.Position = Proton.P = Position;\nProton.Velocity = Proton.V = Velocity;\nProton.Mass = Proton.M = Mass;\nProton.Radius = Proton.R = Radius;\nProton.Body = Proton.B = Body;\n\nProton.Behaviour = Behaviour;\nProton.Force = Proton.F = Force;\nProton.Attraction = Proton.A = Attraction;\nProton.RandomDrift = Proton.RD = RandomDrift;\nProton.Gravity = Proton.G = Gravity;\nProton.Collision = Collision;\nProton.CrossZone = CrossZone;\nProton.Alpha = Alpha;\nProton.Scale = Proton.S = Scale;\nProton.Rotate = Rotate;\nProton.Color = Color;\nProton.Repulsion = Repulsion;\nProton.Cyclone = Cyclone;\nProton.GravityWell = GravityWell;\n\nProton.Emitter = Emitter;\nProton.BehaviourEmitter = BehaviourEmitter;\nProton.FollowEmitter = FollowEmitter;\n\nProton.Zone = Zone;\nProton.LineZone = LineZone;\nProton.CircleZone = CircleZone;\nProton.PointZone = PointZone;\nProton.RectZone = RectZone;\nProton.ImageZone = ImageZone;\n\nProton.CanvasRenderer = CanvasRenderer;\nProton.DomRenderer = DomRenderer;\nProton.EaselRenderer = EaselRenderer;\nProton.PixiRenderer = PixiRenderer;\nProton.PixelRenderer = PixelRenderer;\nProton.WebGLRenderer = Proton.WebGlRenderer = WebGLRenderer;\nProton.CustomRenderer = CustomRenderer;\n\nProton.Debug = Debug;\nUtil.assign(Proton, ease);\n\n// export\nexport default Proton;\n","/**\n *  RAFManager requestAnimationFrame Manager\n * \n *  Simple package\n * \n *  CODE:\n * \n * \t\t// Add to\n *  \t-- RAFManager.add(func);\n * \n *   \t// Add and carry parameters\n *  \t-- const func = data =>{ console.log(data) };\n *  \t-- RAFManager.add(func, 25, { msg:'hello world!' }); \n * \t\t\n * \t\t// remove\n *  \t-- RAFManager.remove(func);\n *  \t-- RAFManager.stop();\t\n*/\n\n// simple polyfill by https://gist.github.com/paulirish/1579671\n(function () {\n\tlet lastTime = 0;\n\tlet vendors = ['ms', 'moz', 'webkit', 'o'];\n\tfor (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\twindow.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n\t\twindow.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']\n\t\t\t|| window[vendors[x] + 'CancelRequestAnimationFrame'];\n\t}\n}());\n\nconst RAFManager = {\n\ttimer: 0,\n\tstate: 'stop',\n\tanimations: [],\n\n\tadd(callback, fps = 60, param = null) {\n\t\tconst n = 60 / fps;\n\t\tconst aniData = { callback, fps, n, param, i: 0 };\n\t\tthis.animations.push(aniData);\n\t\tif (this.animations.length >= 1) this.start();\n\n\t\treturn this;\n\t},\n\n\tgetIndex(callback) {\n\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\tconst aniData = this.animations[i];\n\t\t\tif (aniData.callback === callback) return i;\n\t\t}\n\n\t\treturn -1;\n\t},\n\n\tremove(callback) {\n\t\tconst index = this.getIndex(callback);\n\t\tif (index < 0) return;\n\n\t\tthis.deleteMap(callback);\n\t\tif (this.animations.length === 0) this.stop();\n\n\t\treturn this;\n\t},\n\n\tdeleteMap(callback) {\n\t\tconst index = this.getIndex(callback);\n\t\tconst aniData = this.animations[index];\n\t\tfor (let key in aniData) delete aniData[key];\n\n\t\tthis.animations.splice(index, 1);\n\t},\n\n\tstart() {\n\t\tif (this.state === 'start') return;\n\n\t\tthis.state = 'start';\n\t\tthis.tick();\n\t\treturn this;\n\t},\n\n\tstop() {\n\t\tif (this.state === 'stop') return;\n\n\t\tthis.state = 'stop';\n\t\tcancelAnimationFrame(this.timer);\n\t\treturn this;\n\t},\n\n\ttick() {\n\t\tthis.timer = requestAnimationFrame(() => { this.tick(); });\n\n\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\tconst aniData = this.animations[i];\n\t\t\tconst callback = aniData.callback;\n\t\t\tconst param = aniData.param;\n\n\t\t\taniData.i++;\n\t\t\tif (aniData.i >= aniData.n) {\n\t\t\t\tcallback(param);\n\t\t\t\taniData.i = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default RAFManager;","<template>\r\n    <div class=\"navbar\">\r\n        <div class=\"logo_cat\">\r\n            <router-link :to=\"{ path: '/' }\">\r\n                <img src=\"@/assets/mic.png\" style=\"width: 70px; height: auto;\" alt=\"\">\r\n            </router-link>\r\n            <routerLink to=\"/about\">О нас</routerLink>\r\n            <routerLink to=\"/artists\">Артисты</routerLink>\r\n            <routerLink to=\"/albums\">Альбомы</routerLink>\r\n            <routerLink to=\"/contacts\">Контакты</routerLink>\r\n        </div>\r\n        <div class=\"links\">\r\n            <a href=\"#\">\r\n                <img src=\"@/assets/youtube.svg\" alt=\"\">\r\n            </a>\r\n            <a href=\"#\">\r\n                <img src=\"@/assets/vk.svg\" alt=\"\">\r\n            </a>\r\n            <a href=\"#\">\r\n                <img src=\"@/assets/instagram.svg\" alt=\"\">\r\n            </a>\r\n            <a href=\"#\">\r\n                <img src=\"@/assets/twitter.svg\" alt=\"\">\r\n            </a>\r\n        </div>\r\n        <MenuBurger class=\"menu_burger\"></MenuBurger>\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\nimport MenuBurger from './MenuBurger.vue';\r\nexport default {\r\n    name: \"Navbar\",\r\n    components: { MenuBurger },\r\n}\r\n\r\n\r\n</script>\r\n    \r\n<style scoped>\r\n.navbar {\r\n    position: relative;\r\n    height: 80px;\r\n    width: 100%;\r\n    background: rgba(0, 0, 0);\r\n    border-radius: 0px 0px 20px 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 30px 40px 10px 40px;\r\n    font-size: xx-large;\r\n    z-index: 2;\r\n    box-shadow: 0px 0px 29px 25px rgb(0, 0, 0);\r\n}\r\n\r\n.logo_cat {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 25px;\r\n    align-items: center;\r\n}\r\n\r\n.logo_cat a {\r\n    text-decoration: none;\r\n    color: rgb(152, 152, 216);\r\n    transition: all .2s;\r\n}\r\n\r\n.logo_cat a:hover {\r\n    filter: brightness(1.5);\r\n}\r\n\r\n.links {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    gap: 30px;\r\n}\r\n\r\n\r\n.links a {\r\n    position: relative;\r\n    width: 50px;\r\n    height: 50px;\r\n    background: transparent;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 6px;\r\n    border-radius: 50%;\r\n    box-shadow: 0px 0px 10px 1px rgb(135, 135, 210);\r\n    overflow: hidden;\r\n    transition: .2s;\r\n}\r\n\r\n.links a img {\r\n    padding: 10px;\r\n    filter: invert(84%) sepia(48%) saturate(3491%) hue-rotate(193deg) brightness(88%) contrast(92%);\r\n    transition: all .5s;\r\n}\r\n\r\n.links a:hover {\r\n    scale: 1.1;\r\n    filter: brightness(1.5);\r\n}\r\n\r\n@media (max-width: 1150px) {\r\n    .links {\r\n        scale: .8;\r\n    }\r\n\r\n    .logo_cat a {\r\n        font-size: 2.2vw;\r\n    }\r\n}\r\n\r\n@media (max-width: 950px) {\r\n\r\n    .links {\r\n        display: none;\r\n    }\r\n\r\n    .logo_cat a {\r\n        font-size: 2.7vw;\r\n    }\r\n}\r\n\r\n@media (max-width:600px) {\r\n    .logo_cat a {\r\n        display: none;\r\n    }\r\n\r\n    .menu_burger {\r\n        display: block;\r\n    }\r\n\r\n    .logo_cat a:has(img) {\r\n        display: block !important;\r\n    }\r\n}\r\n</style>","<template>\r\n  <div class=\"burger-menu\">\r\n    <button @click=\"burgerMenu\" class=\"burger-menu_button\">\r\n      <span class=\"burger-menu_lines\"></span>\r\n    </button>\r\n    <nav class=\"burger-menu_nav\">\r\n      <div data-text=\"О нас\" class=\"menu_item\">\r\n        <router-link to=\"/about\" class=\"burger-menu_link\">О нас</router-link>\r\n      </div>\r\n      <div data-text=\"Артисты\" class=\"menu_item\">\r\n        <router-link to=\"/artists\" class=\"burger-menu_link\">Артисты</router-link>\r\n      </div>\r\n      <div data-text=\"Альбомы\" class=\"menu_item\">\r\n        <router-link to=\"/albums\" class=\"burger-menu_link\">Альбомы</router-link>\r\n      </div>\r\n      <div data-text=\"Контакты\" class=\"menu_item\">\r\n        <router-link to=\"/contacts\" class=\"burger-menu_link\">Контакты</router-link>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MenuBurger\",\r\n  components: {},\r\n  methods: {\r\n    burgerMenu() {\r\n      let menu = document.querySelector('.burger-menu');\r\n      let links = menu.querySelector('.burger-menu_link');\r\n      links.addEventListener('click', toggleMenu());\r\n\r\n      function toggleMenu() {\r\n        menu.classList.toggle('burger-menu_active');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css?family=Roboto:100,300,400,700');\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.burger-menu{\r\n  display: none;\r\n}\r\n\r\n.burger-menu_button {\r\n  position: relative;\r\n  cursor: pointer;\r\n  z-index: 30;\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  background: transparent;\r\n  border: none;\r\n  -webkit-transition: 0.4s;\r\n  -moz-transition: 0.4s;\r\n  -o-transition: 0.4s;\r\n  transition: 0.4s;\r\n}\r\n\r\n.burger-menu_lines::before,\r\n.burger-menu_lines::after,\r\n.burger-menu_lines {\r\n  display: block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 3px;\r\n  background: linear-gradient(144deg, #AF40FF, #5B42F3 50%, #00DDEB);\r\n  margin: 0;\r\n  transition: all .2s;\r\n}\r\n\r\n.burger-menu_lines::before {\r\n  float: right;\r\n  content: '';\r\n  width: 60%;\r\n  top: -10px;\r\n}\r\n\r\n.burger-menu_lines::after {\r\n  float: right;\r\n  content: '';\r\n  width: 80%;\r\n  top: 10px;\r\n}\r\n\r\n.burger-menu_active .burger-menu_lines {\r\n  transform: rotate(45deg);\r\n}\r\n\r\n.burger-menu_active .burger-menu_lines::before {\r\n  opacity: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    transform: rotate(0);\r\n}\r\n\r\n.burger-menu_active .burger-menu_lines::after {\r\n  width: 100%;\r\n    transform: translateY(-13px) rotate(90deg);\r\n}\r\n\r\n.burger-menu_nav {\r\n  display: flex;\r\n    position: fixed;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    visibility: visible;\r\n    top:0;\r\n    left: 100%;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    margin: 0;\r\n    gap: 20px;\r\n    align-items: center;\r\n    background-color: rgb(0, 0, 0);\r\n    transition: all .5s;\r\n    z-index: 20;\r\n}\r\n\r\n.burger-menu_active .burger-menu_nav {\r\n  left: 0;\r\n}\r\n\r\n\r\n.burger-menu_link:hover {\r\n  filter: brightness(0.9);\r\n}\r\n\r\n.burger-menu_overlay {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 10;\r\n}\r\n\r\n.burger-menu_active .burger-menu_overlay {\r\n  display: block;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.menu_item {\r\n    display: flex;\r\n    justify-content: center;\r\n    list-style: none;\r\n}\r\n\r\n.menu_item a {\r\n    position: relative;\r\n    display: inline-block;\r\n    text-align: center;\r\n    padding: 12px 24px;\r\n    color: white;\r\n    font-size: xx-large;\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n    transition: all .5s;\r\n    text-decoration: none;\r\n    z-index: 100;\r\n}\r\n\r\n.menu_item::before {\r\n    content: attr(data-text);\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%,-50%);\r\n    color: rgb(135, 135, 210);\r\n    font-size: 2.5em;\r\n    font-weight: 700;\r\n    pointer-events: none;\r\n    opacity: 0;\r\n    letter-spacing: 20px;\r\n    transition: all .5s;\r\n    white-space: nowrap;\r\n}\r\n\r\n.menu_item a:hover{\r\n    transform: scale(1.4);\r\n    z-index: 1000;\r\n}\r\n\r\n.menu_item:hover::before {\r\n    opacity: .3;\r\n    letter-spacing: 0px;\r\n}\r\n</style>","import { render } from \"./MenuBurger.vue?vue&type=template&id=d5406fcc&scoped=true\"\nimport script from \"./MenuBurger.vue?vue&type=script&lang=js\"\nexport * from \"./MenuBurger.vue?vue&type=script&lang=js\"\n\nimport \"./MenuBurger.vue?vue&type=style&index=0&id=d5406fcc&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d5406fcc\"]])\n\nexport default __exports__","import { render } from \"./Navbar.vue?vue&type=template&id=6372839a&scoped=true\"\nimport script from \"./Navbar.vue?vue&type=script&lang=js\"\nexport * from \"./Navbar.vue?vue&type=script&lang=js\"\n\nimport \"./Navbar.vue?vue&type=style&index=0&id=6372839a&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6372839a\"]])\n\nexport default __exports__","<template>\r\n  <header>\r\n    <Navbar></Navbar>\r\n  </header>\r\n  <main class=\"center\">\r\n    <particles-bg color=\"#232323\" type=\"lines\" :bg=\"true\" />\r\n    <img src=\"@/assets/mic.png\" alt=\"\" class=\"logo\">\r\n    <h2 class=\"mblock\">Music News</h2>\r\n    <h1 class=\"mblock\">In Tune - сервис, который поможет вам окунуться в мир музыки.</h1>\r\n    <p class=\"mblock\">In Tune предоставит вам возможность не только узнать о новых лицах в музыкальной индустрии, но и\r\n      прослушать их самые популярные альбомы. А благодаря переходу на страницы албомов на GENIUS вы сможете ознакомиться\r\n      с текстами интересующих вас треков, для того чтобы лучше понять смысл, который исполнительв них вложил.</p>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport { ParticlesBg } from \"particles-bg-vue\";\r\nimport Navbar from '@/components/Navbar.vue';\r\nexport default {\r\n  name: \"About\",\r\n  components: { Navbar, ParticlesBg }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ncanvas {\r\n  min-height: 100vh !important;\r\n  height: 100%;\r\n}\r\n\r\nheader {\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 80px;\r\n  background: #232323;\r\n  z-index: 100;\r\n}\r\n\r\nmain {\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  padding-bottom: 20px;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 100vh;\r\n  color: white;\r\n}\r\n\r\nmain h1 {\r\n  text-align: justify;\r\n  font-size: 2.5em;\r\n  text-align: center;\r\n}\r\n\r\nmain p {\r\n  display: block;\r\n  margin: 0px auto 3em;\r\n  max-width: 700px;\r\n  font-size: 1.5em;\r\n  text-align: justify;\r\n}\r\n\r\n.mblock {\r\n  width: fit-content;\r\n  margin: 0 auto;\r\n  display: block;\r\n  margin-bottom: .5em;\r\n}\r\n\r\n.logo {\r\n  display: block;\r\n  height: 9em;\r\n  width: auto;\r\n  margin: 0 auto;\r\n  margin-bottom: .2em;\r\n  margin-top: 100px;\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  main h1 {\r\n    text-align: justify;\r\n    font-size: 1.65em;\r\n    text-align: center;\r\n  }\r\n\r\n  main p {\r\n    display: block;\r\n    font-size:medium;\r\n    line-height: 1.5;\r\n    margin: 0px auto 3em;\r\n    max-width: 700px;\r\n    text-align: justify;\r\n  }\r\n\r\n  .logo {\r\n    height: 6em;\r\n  }\r\n  h2{\r\n    font-size: smaller;\r\n  }\r\n}\r\n</style>","<template>\n  <component\n    :is=\"particles\"\n    :globalCompositeOperation=\"globalCompositeOperation\"\n    :num=\"getNum()\"\n    :bg=\"bg\"\n    :color=\"color\"\n    :canvas=\"canvas\"\n    :config=\"config\"\n  ></component>\n</template>\n\n<script>\nimport Rand from \"./utils/Rand.js\";\nimport BallParticles from \"./particles/BallParticles.vue\";\nimport ColorParticles from \"./particles/ColorParticles.vue\";\nimport CircleParticles from \"./particles/CircleParticles.vue\";\nimport CobwebParticles from \"./particles/CobwebParticles.vue\";\nimport ThickParticles from \"./particles/ThickParticles.vue\";\nimport CustomParticles from \"./particles/CustomParticles.vue\";\nimport LinesParticles from \"./particles/LinesParticles.vue\";\nimport PolygonParticles from \"./particles/PolygonParticles.vue\";\nimport SquareParticles from \"./particles/SquareParticles.vue\";\nimport FountainParticles from \"./particles/FountainParticles.vue\";\nimport TadpoleParticles from \"./particles/TadpoleParticles.vue\";\n\nexport default {\n  name: \"ParticlesBg\",\n  components: {\n    ColorParticles,\n    CircleParticles,\n    CobwebParticles,\n    ThickParticles,\n    LinesParticles,\n    FountainParticles,\n    CustomParticles,\n    PolygonParticles,\n    SquareParticles,\n    TadpoleParticles,\n    BallParticles\n  },\n  props: {\n    type: {\n      type: String,\n      required: false,\n      default: \"random\"\n    },\n    num: [String, Number],\n    bg: Boolean,\n    color: String,\n    config: Object,\n    canvas: Object,\n    list: Array,\n    globalCompositeOperation: String\n  },\n  data() {\n    return {\n      particles: \"color-particles\"\n    };\n  },\n  methods: {\n    getNum() {\n      return +this.num;\n    },\n    getRandom() {\n      if (!this.random) {\n        // Code source from here, thanks author\n        // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n        this.random = new Rand();\n        this.random.set(0.25, \"color-particles\");\n        this.random.set(0.2, \"ball-particles\");\n        this.random.set(0.2, \"circle-particles\");\n        this.random.set(0.2, \"cobweb-particles\");\n        this.random.set(0.2, \"thick-particles\");\n        this.random.set(0.2, \"lines-particles\");\n        this.random.set(0.2, \"fountain-particles\");\n        this.random.set(0.2, \"polygon-particles\");\n        this.random.set(0.2, \"square-particles\");\n        this.random.set(0.2, \"tadpole-particles\");\n      }\n      return this.random.getResult();\n    },\n\n    getFromList(){\n      if(!this.list) return this.getRandom();\n      let item = this.list[Math.floor(Math.random() * this.list.length)];\n      item = this.transformName(item);\n\n      return item;\n    },\n\n    transformName(name){\n      name = String(name).toLowerCase() || \"random\";\n      if (name.indexOf(\"-\") <= 0) name += \"-particles\";\n      return name;\n    },\n\n    setParticles() {\n      this.particles = this.transformName(this.type);\n      if (this.particles.indexOf(\"random\") === 0) {\n        this.particles = this.getRandom();\n      }\n\n      if (this.particles.indexOf(\"list\") === 0) {\n        this.particles = this.getFromList();\n      }\n    }\n  },\n  created() {\n    this.setParticles();\n  },\n  beforeMount() {}\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n","// Code source from here, thanks author\n// https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\nclass Rand {\n\n  constructor() {\n      this.list = [];\n  }\n\n  set(probability, target) {\n      this.list.push({\n          probability,\n          target,\n          a: 0,\n          b: 1\n      });\n\n      this.calculation();\n  }\n\n  calculation() {\n      let total = 0;\n      for (let i = 0; i < this.list.length; i++) {\n          total += this.list[i].probability;\n      }\n\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n          const val = obj.probability / total;\n\n          obj.a = i === 0 ? 0 : this.list[i - 1].b;\n          obj.b = obj.a + val;\n      }\n  }\n\n  getResult() {\n      const val = Math.random();\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n\n          if (val <= obj.b && val > obj.a) {\n              return obj.target;\n          }\n      }\n\n      return this.list[0].target;\n  }\n};\n\nexport default Rand;\n","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"BallParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      this.createMiniEmitter(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const context = canvas.getContext(\"2d\");\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9),\n        new Proton.Span(0.8, 1.3)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 50));\n      emitter.addInitialize(new Proton.Life(5, 6));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(5, 8),\n          new Proton.Span(30, 70),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(1, 0));\n      emitter.addBehaviour(\n        new Proton.Color([\n          \"#36aaf3\",\n          \"#fd769c\",\n          \"#94ff22\",\n          \"#ffa545\",\n          \"#ffffff\"\n        ])\n      );\n      emitter.addBehaviour(new Proton.Scale(0.7, 1));\n      emitter.addBehaviour(new Proton.Gravity(3));\n      emitter.addBehaviour(new Proton.Collision(emitter));\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n\n      emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n      emitter.p.y = canvas.height / 2 + 50;\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = () => {\n        context.fillStyle =\n          getColor(this.color, 0.2) || \"rgba(255, 255, 255, 0.2)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n      this.proton.addRenderer(renderer);\n\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    customDeadBehaviour(canvas) {\n      return {\n        initialize(particle) {},\n        applyBehaviour: particle => {\n          if (particle.p.y + particle.radius >= canvas.height) {\n            if (particle.radius > 9) {\n              this.miniEmitteing(particle);\n              particle.dead = true;\n            }\n          }\n        }\n      };\n    },\n\n    createMiniEmitter(canvas) {\n      const miniEmitter = new Proton.Emitter();\n      miniEmitter.rate = new Proton.Rate(\n        new Proton.Span(3, 6),\n        new Proton.Span(1, 2)\n      );\n\n      miniEmitter.addInitialize(new Proton.Mass(1));\n      miniEmitter.radiusInitialize = new Proton.Radius();\n      miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n      miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n      miniEmitter.addInitialize(\n        new Proton.V(\n          new Proton.Span(1.5, 3),\n          new Proton.Span(0, 70, true),\n          \"polar\"\n        )\n      );\n\n      miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n      miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n      miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n      miniEmitter.addBehaviour(new Proton.Gravity(4));\n      miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n      miniEmitter.addBehaviour(\n        new Proton.CrossZone(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height),\n          \"bound\"\n        )\n      );\n      this.proton.addEmitter(miniEmitter);\n\n      this.miniEmitter = miniEmitter;\n    },\n    miniEmitteing(particle) {\n      const miniEmitter = this.miniEmitter;\n      miniEmitter.radiusInitialize.reset(\n        particle.radius * 0.05,\n        particle.radius * 0.2\n      );\n      miniEmitter.colorBehaviour.reset(particle.color);\n      miniEmitter.p.x = particle.p.x;\n      miniEmitter.p.y = particle.p.y;\n      miniEmitter.emit(\"once\");\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","<template>\n  <canvas\n    class=\"canvas\"\n    ref=\"canvasRef\"\n    v-bind:style=\"styleObject\"\n    v-on:mousedown=\"handleMouseDown\"\n    v-on:mousemove=\"handleMouseMove\"\n  />\n</template>\n\n<script>\nexport default {\n  name: \"CanvasComp\",\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    globalCompositeOperation: String\n  },\n  data: function() {\n    return {\n      styleObject: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    };\n  },\n  methods: {\n    initCanvas: function() {\n      const canvas = this.$refs.canvasRef;\n      const width = canvas.clientWidth;\n      const height = canvas.clientHeight;\n      canvas.width = width;\n      canvas.height = height;\n\n      if (this.globalCompositeOperation) {\n        const context = canvas.getContext(\"2d\");\n        context.globalCompositeOperation = this.globalCompositeOperation;\n      }\n\n      this.$emit(\"canvasInited\", canvas);\n    },\n    resize: function() {\n      const canvas = this.$refs.canvasRef;\n      const width = canvas.clientWidth;\n      const height = canvas.clientHeight;\n      canvas.width = width;\n      canvas.height = height;\n      this.$emit(\"canvasResize\", { width, height });\n    },\n\n    handleMouseDown: function(e) {\n      this.$emit(\"canvasMouseDown\", e);\n    },\n\n    handleMouseMove: function(e) {\n      this.$emit(\"canvasMouseMove\", e);\n    }\n  },\n  created() {\n    if (this.bg) {\n      this.styleObject = Object.assign(this.styleObject, {\n        position: \"absolute\",\n        zIndex: -1,\n        top: 0,\n        left: 0\n      });\n    }\n\n    if(this.canvas){\n      this.styleObject = Object.assign(this.styleObject, this.canvas);\n    }\n  },\n  mounted() {\n    this.initCanvas();\n    this.resize = this.resize.bind(this);\n    window.addEventListener(\"resize\", this.resize);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.canvas {\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n</style>\n","import { render } from \"./CanvasComp.vue?vue&type=template&id=0fc19be9&scoped=true\"\nimport script from \"./CanvasComp.vue?vue&type=script&lang=js\"\nexport * from \"./CanvasComp.vue?vue&type=script&lang=js\"\n\nimport \"./CanvasComp.vue?vue&type=style&index=0&id=0fc19be9&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0fc19be9\"]])\n\nexport default __exports__","\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : {};\n}\n\nfunction getColor(color, a) {\n    let c;\n    if (color) {\n        c = hexToRgb(color);\n        return `rgba(${c.r},${c.g},${c.b}, ${a})`;\n    } else {\n        return null;\n    }\n}\n\n\nexport { hexToRgb, getColor };","import { render } from \"./BallParticles.vue?vue&type=template&id=3fe54be5\"\nimport script from \"./BallParticles.vue?vue&type=script&lang=js\"\nexport * from \"./BallParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst colors = [\n  \"#529B88\",\n  \"#CDD180\",\n  \"#FFFA32\",\n  \"#FB6255\",\n  \"#FB4A53\",\n  \"#FF4E50\",\n  \"#F9D423\"\n];\n\nexport default {\n  name: \"ColorParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(5, 8),\n        new Proton.Span(0.1, 0.25)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(20, 200));\n      emitter.addInitialize(new Proton.Life(2, 4));\n      emitter.addInitialize(\n        new Proton.Position(new Proton.RectZone(0, 0, width, height))\n      );\n\n      emitter.addBehaviour(\n        new Proton.Alpha(0, 1, Infinity, Proton.easeOutCubic)\n      );\n      emitter.addBehaviour(\n        new Proton.Scale(1, 0, Infinity, Proton.easeOutCubic)\n      );\n      emitter.addBehaviour(new Proton.Color(colors, \"random\"));\n\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = new Proton.CanvasRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./ColorParticles.vue?vue&type=template&id=2951e5a3\"\nimport script from \"./ColorParticles.vue?vue&type=script&lang=js\"\nexport * from \"./ColorParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst colors = [\n  \"#529B88\",\n  \"#CDD180\",\n  \"#FFFA32\",\n  \"#FB6255\",\n  \"#FB4A53\",\n  \"#FF4E50\",\n  \"#F9D423\"\n];\n\nexport default {\n  name: \"ColorParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.num || 20);\n      emitter.damping = 0.008;\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(30, 600));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(0.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      emitter.addInitialize(\n        new Proton.Position(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height)\n        )\n      );\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"cross\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.35, 0.55)));\n      emitter.addBehaviour(new Proton.Color(this.getColor()));\n      emitter.addBehaviour(new Proton.RandomDrift(50, 50, 0.5));\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n\n      const renderer = new Proton.CanvasRenderer(canvas);\n      this.proton.addRenderer(renderer);\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    getColor() {\n      let c = colors;\n      if (this.color) {\n        if (Array.isArray(this.color)) {\n          c = this.color;\n        } else {\n          c = [this.color];\n        }\n      }\n\n      return c;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./CircleParticles.vue?vue&type=template&id=2286823d\"\nimport script from \"./CircleParticles.vue?vue&type=script&lang=js\"\nexport * from \"./CircleParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"CobwebParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(100),\n        new Proton.Span(0.05, 0.2)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(1, 4));\n      emitter.addInitialize(new Proton.Life(Infinity));\n      const pointZone = new Proton.Position(\n        new Proton.RectZone(0, 0, width, height)\n      );\n      emitter.addInitialize(pointZone);\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(0.3, 0.6),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.2, 0.9)));\n      emitter.addBehaviour(new Proton.Color(this.color || \"#333\"));\n      this.crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, width, height),\n        \"cross\"\n      );\n      emitter.addBehaviour(this.crossZoneBehaviour);\n\n      emitter.emit(\"once\");\n      emitter.damping = 0;\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas, emitter));\n    },\n    createRenderer(canvas, emitter) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n      const R = 140;\n\n      renderer.onProtonUpdateAfter = () => {\n        let particles = emitter.particles;\n\n        for (let i = 0; i < particles.length; i++) {\n          for (let j = i + 1; j < particles.length; j++) {\n            let pA = particles[i];\n            let pB = particles[j];\n            let dis = pA.p.distanceTo(pB.p);\n\n            if (dis < R) {\n              let alpha = (1 - dis / R) * 0.5;\n              context.strokeStyle =\n                getColor(this.color, alpha) || `rgba(3, 3, 3, ${alpha})`;\n              context.beginPath();\n              context.moveTo(pA.p.x, pA.p.y);\n              context.lineTo(pB.p.x, pB.p.y);\n              context.closePath();\n              context.stroke();\n            }\n          }\n        }\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./CobwebParticles.vue?vue&type=template&id=2fc246c4\"\nimport script from \"./CobwebParticles.vue?vue&type=script&lang=js\"\nexport * from \"./CobwebParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"ThickParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.canvasDom = canvas;\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 150);\n\n      // Initialize\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(8));\n      emitter.addInitialize(\n        new Proton.V(\n          new Proton.Span(0.1, 0.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      emitter.addInitialize(\n        new Proton.Position(\n          new Proton.CircleZone(canvas.width / 2, canvas.height / 2, 100)\n        )\n      );\n\n      // Behaviour\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"cross\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n      this.repulsion = new Proton.Repulsion(\n        {\n          x: canvas.width / 2,\n          y: canvas.height / 2 - 100\n        },\n        3,\n        300\n      );\n\n      this.attraction = new Proton.Attraction(\n        {\n          x: canvas.width / 2,\n          y: canvas.height / 2\n        },\n        3,\n        200\n      );\n      emitter.addBehaviour(this.attraction, this.repulsion);\n      emitter.addBehaviour(new Proton.Color(\"random\"));\n      emitter.addBehaviour(new Proton.RandomDrift(20, 15, 0.15));\n\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      renderer.onProtonUpdate = () => {\n        this.hue += 1;\n        context.fillStyle = getColor(this.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.begin = Proton.MathUtil.randomAToB(1, 120);\n        particle.data.tha = Proton.MathUtil.randomAToB(0, Math.PI * 2);\n      };\n\n      renderer.onParticleUpdate = particle => {\n        const hue = particle.data.begin + this.hue;\n        particle.color = this.colorTemplate.replace(\"hue\", hue % 360);\n\n        const ratio = 3 / 4;\n        const radius =\n          particle.radius *\n            (1 - ratio) *\n            Math.cos((particle.data.tha += 0.01)) +\n          particle.radius * ratio;\n\n        context.beginPath();\n        context.fillStyle = particle.color;\n        context.arc(particle.p.x, particle.p.y, radius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fill();\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      const canvas = this.canvasDom;\n      this.proton.update();\n      if (this.index % 200 === 0) {\n        this.attraction.targetPosition.x = Math.random() * canvas.width;\n        this.attraction.targetPosition.y = Math.random() * canvas.height;\n\n        this.repulsion.targetPosition.x = Math.random() * canvas.width;\n        this.repulsion.targetPosition.y = Math.random() * canvas.height;\n      }\n\n      this.index++;\n    }\n  },\n  created() {\n    this.hue = 0;\n    this.index = 0;\n    this.colorTemplate = `hsla(hue,80%,50%, 0.75)`;\n    this.renderProton = this.renderProton.bind(this);\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./ThickParticles.vue?vue&type=template&id=81872e3e\"\nimport script from \"./ThickParticles.vue?vue&type=script&lang=js\"\nexport * from \"./ThickParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"getCompositeOperation()\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst colors = [\n  \"#529B88\",\n  \"#CDD180\",\n  \"#FFFA32\",\n  \"#FB6255\",\n  \"#FB4A53\",\n  \"#FF4E50\",\n  \"#F9D423\"\n];\n\nexport default {\n  name: \"CustomParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    num: Number,\n    color: String,\n    globalCompositeOperation: String,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    getCompositeOperation() {\n      const globalCompositeOperation =\n        this.globalCompositeOperation || this.operation || \"source-over\";\n      return globalCompositeOperation;\n    },\n\n    getProp(key, defaultVal) {\n      const config = this.config || {};\n      const val = config[key] || defaultVal;\n      \n      if (Array.isArray(val)) {\n        return new Proton.Span(val[0], val[1]);\n      } else {\n        return val;\n      }\n    },\n\n    getArrProp(key, defaultVal) {\n      const config = this.config || {};\n      const val = config[key] || defaultVal;\n      if (!val) return null;\n\n      if (Array.isArray(val)) {\n        return val;\n      } else {\n        return [val, val];\n      }\n    },\n\n    createProton(canvas, width, height) {\n      const num = this.getProp(\"num\", [5, 8]);\n      const rps = this.getProp(\"rps\", [0.1, 0.2]);\n      const mass = this.getProp(\"mass\", 1);\n      const radius = this.getProp(\"radius\", [10, 30]);\n      const life = this.getProp(\"life\", [2, 3]);\n      const body = this.getProp(\"body\");\n      const position = this.getProp(\"position\");\n      const v = this.getProp(\"v\", [2, 3]);\n      const tha = this.getProp(\"tha\", [-15, 15]);\n      const alpha = this.getArrProp(\"alpha\");\n      const scale = this.getArrProp(\"scale\");\n      const color = this.getArrProp(\"color\");\n      const cross = this.getProp(\"cross\", \"dead\");\n      const random = this.getProp(\"random\");\n      const rotate = this.getArrProp(\"rotate\");\n      const g = this.getProp(\"g\");\n      const f = this.getArrProp(\"f\");\n      const emitterV = this.getProp(\"emitter\");\n\n      this.proton = new Proton();\n      let emitter;\n      if (emitterV === \"follow\") {\n        emitter = new Proton.FollowEmitter();\n      } else {\n        emitter = new Proton.Emitter();\n      }\n      emitter.rate = new Proton.Rate(num, rps);\n\n      emitter.addInitialize(new Proton.Mass(mass));\n      emitter.addInitialize(new Proton.Radius(radius));\n      emitter.addInitialize(new Proton.Life(life));\n      emitter.addInitialize(new Proton.Velocity(v, tha, \"polar\"));\n      if (body) emitter.addInitialize(new Proton.Body(body));\n\n      let pos;\n      if (position === \"all\" || position === \"screen\") {\n        pos = new Proton.Position(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height)\n        );\n      } else if (typeof position === \"object\") {\n        pos = new Proton.Position(\n          new Proton.RectZone(\n            position.x,\n            position.y,\n            position.width,\n            position.height\n          )\n        );\n      } else {\n        emitter.p.x = canvas.width / 2;\n        emitter.p.y = canvas.height / 2;\n      }\n\n      emitter.addInitialize(pos);\n\n      /// behaviour\n      const alphaB = alpha\n        ? new Proton.Alpha(alpha[0], alpha[1])\n        : new Proton.Alpha(0, 1);\n      const scaleB = scale\n        ? new Proton.Scale(scale[0], scale[1])\n        : new Proton.Scale(1, 0.2);\n      const colorB = color\n        ? new Proton.Color(color[0], color[1])\n        : new Proton.Color(colors);\n\n      emitter.addBehaviour(alphaB);\n      emitter.addBehaviour(scaleB);\n      if (!body) emitter.addBehaviour(colorB);\n\n      if (rotate) {\n        if (rotate[0] === true || rotate[0] === \"rotate\") {\n          emitter.addBehaviour(new Proton.Rotate());\n        } else {\n          emitter.addBehaviour(new Proton.Rotate(rotate[0], rotate[1]));\n        }\n      }\n\n      const zone = new Proton.RectZone(0, 0, canvas.width, canvas.height);\n      const crossZoneBehaviour = new Proton.CrossZone(zone, cross);\n      emitter.addBehaviour(crossZoneBehaviour);\n\n      random &&\n        emitter.addBehaviour(new Proton.RandomDrift(random, random, 0.05));\n      g && emitter.addBehaviour(new Proton.G(g));\n      f && emitter.addBehaviour(new Proton.F(f[0], f[1]));\n\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n\n      this.emitter = emitter;\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n\n    createRenderer(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      const onUpdate = this.getProp(\"onUpdate\");\n      if (onUpdate) {\n        renderer.onProtonUpdate = () => {\n          onUpdate(context, width, height);\n        };\n      }\n\n      const onParticleCreated = this.getProp(\"onParticleCreated\");\n      if (onParticleCreated) {\n        renderer.onParticleCreated = particle => {\n          onParticleCreated(context, particle);\n        };\n      }\n\n      const onParticleUpdate = this.getProp(\"onParticleUpdate\");\n      if (onParticleUpdate) {\n        renderer.onParticleUpdate = particle => {\n          onParticleUpdate(context, particle);\n        };\n      }\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./CustomParticles.vue?vue&type=template&id=9ea53cf0\"\nimport script from \"./CustomParticles.vue?vue&type=script&lang=js\"\nexport * from \"./CustomParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"source-over\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nexport default {\n  name: \"LinesParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 250);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(4));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(1.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      \n      const mouseObj = {\n        x: width / 2,\n        y: height / 2\n      };\n      const attractionBehaviour = new Proton.Attraction(mouseObj, 0, 0);\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"cross\"\n      );\n      emitter.addBehaviour(new Proton.Color(\"random\"));\n      emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.05));\n      emitter.p.x = canvas.width / 2;\n      emitter.p.y = canvas.height / 2;\n      emitter.emit(\"once\");\n\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n      renderer.onProtonUpdate = () => {\n        context.fillStyle =\n          getColor(this.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleUpdate = function(particle) {\n        context.beginPath();\n        context.strokeStyle = particle.color;\n        context.lineWidth = 1;\n        context.moveTo(particle.old.p.x, particle.old.p.y);\n        context.lineTo(particle.p.x, particle.p.y);\n        context.closePath();\n        context.stroke();\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./LinesParticles.vue?vue&type=template&id=6b94540c\"\nimport script from \"./LinesParticles.vue?vue&type=script&lang=js\"\nexport * from \"./LinesParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"xor\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst COLOR = [\n  \"#f6b93b\",\n  \"#18dcff\",\n  \"#cd84f1\",\n  \"#ED4C67\",\n  \"#ffffff\",\n  \"#b71540\",\n  \"#32ff7e\",\n  \"#ff3838\"\n];\n\nexport default {\n  name: \"PolygonParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.createProton(canvas);\n      this.createEmitter({\n        canvas,\n        x: width / 2,\n        y: height / 2,\n        mainEmitter: true,\n        zone: \"bound\"\n      });\n\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      this.proton = new Proton();\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    },\n\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CustomRenderer();\n      renderer.onProtonUpdate = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.count = Proton.MathUtil.randomAToB(3, 10, true);\n      };\n\n      renderer.onParticleUpdate = particle => {\n        context.save();\n        context.globalAlpha = particle.alpha;\n        context.fillStyle = particle.color;\n\n        context.translate(particle.p.x, particle.p.y);\n        context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n        context.translate(-particle.p.x, -particle.p.y);\n\n        context.beginPath();\n        drawPolygon(particle, particle.data.count);\n\n        context.closePath();\n        context.fill();\n        context.globalAlpha = 1;\n        context.restore();\n      };\n\n      renderer.onParticleDead = particle => {};\n\n      const drawPolygon = (particle, count) => {\n        if (count >= 7) {\n          context.arc(\n            particle.p.x,\n            particle.p.y,\n            particle.radius,\n            0,\n            Math.PI * 2,\n            true\n          );\n        } else {\n          const radius = particle.radius;\n\n          for (let i = 0; i <= count; i++) {\n            let x =\n              particle.p.x +\n              radius * Math.cos((((Math.PI / 180) * 360) / count) * i);\n            let y =\n              particle.p.y +\n              radius * Math.sin((((Math.PI / 180) * 360) / count) * i);\n\n            if (i === 0) context.moveTo(x, y);\n            else context.lineTo(x, y);\n          }\n        }\n      };\n\n      return renderer;\n    },\n\n    createEmitter({\n      mainEmitter,\n      canvas,\n      x,\n      y,\n      radius,\n      color = COLOR,\n      zone = \"dead\",\n      once = \"all\",\n      alpha = 0.85,\n      gravity = 3.5\n    }) {\n      const emitter = this.proton.pool.get(Proton.Emitter);\n\n      if (!emitter.completed) {\n        emitter.rate = new Proton.Rate(\n          this.num ? new Proton.Span(this.num) : new Proton.Span(4, 9),\n          new Proton.Span(1.6, 2.2)\n        );\n\n        const radiusInit = mainEmitter\n          ? new Proton.Radius(10, 110)\n          : new Proton.Radius(3, radius);\n        emitter.addInitialize(new Proton.Mass(1));\n        emitter.addInitialize(radiusInit);\n        emitter.addInitialize(new Proton.Life(3, 6));\n        emitter.addInitialize(\n          new Proton.Velocity(\n            new Proton.Span(4, 6),\n            new Proton.Span(-90, 90),\n            \"polar\"\n          )\n        );\n\n        emitter.addBehaviour(new Proton.Alpha(alpha, 0.2));\n        emitter.addBehaviour(new Proton.Color(color));\n        emitter.addBehaviour(new Proton.Scale(1, 0.3));\n        emitter.addBehaviour(new Proton.Rotate());\n        emitter.addBehaviour(new Proton.Gravity(gravity));\n\n        emitter.addBehaviour(this.customDeadBehaviour(canvas));\n        emitter.addBehaviour(\n          new Proton.CrossZone(\n            new Proton.RectZone(0, 0, canvas.width, canvas.height),\n            zone\n          )\n        );\n      }\n\n      emitter.p.x = x;\n      emitter.p.y = y;\n      if (once === \"once\") emitter.emit(\"once\");\n      else emitter.emit();\n\n      this.proton.addEmitter(emitter);\n      //this.expireEmitter(emitter);\n    },\n\n    expireEmitter(emitter) {\n      setTimeout(() => {\n        emitter.completed = true;\n        this.proton.pool.expire(emitter);\n        this.proton.removeEmitter(emitter);\n      }, 500);\n    },\n\n    customDeadBehaviour(canvas) {\n      return {\n        initialize: particle => {\n          particle.data = particle.data || {};\n          particle.data.oldRadius = particle.radius;\n          particle.data.emitterCount = 0;\n        },\n        applyBehaviour: particle => {\n          if (particle.radius < 5) return;\n          if (particle.data.emitterCount >= 2) return;\n\n          if (particle.radius <= (1 / 3) * particle.data.oldRadius) {\n            particle.data.emitterCount++;\n            this.createEmitter({\n              canvas,\n              x: particle.p.x,\n              y: particle.p.y,\n              radius: particle.radius * (1 / 2),\n              alpha: 0.5,\n              gravity: 5,\n              color: particle.color,\n              once: \"once\"\n            });\n          }\n        }\n      };\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./PolygonParticles.vue?vue&type=template&id=395b3162\"\nimport script from \"./PolygonParticles.vue?vue&type=script&lang=js\"\nexport * from \"./PolygonParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"lighter\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nconst colors = [\n  \"#fad390\",\n  \"#81ecec\",\n  \"#ffffff\",\n  \"#badc58\",\n  \"#f9ca24\",\n  \"#FEA47F\"\n];\nexport default {\n  name: \"SquareParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({ width, height }) {\n      const dis = 150;\n      this.crossZoneBehaviour.zone.width = width + 2 * dis;\n      this.crossZoneBehaviour.zone.height = height + 2 * dis;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(this.num ? this.num : 50);\n      emitter.damping = 0;\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(4, 70));\n      emitter.addInitialize(\n        new Proton.Velocity(new Proton.Span(4, 12), 180, \"polar\")\n      );\n      emitter.addInitialize(\n        new Proton.Position(new Proton.LineZone(0, 0, canvas.width, 0))\n      );\n\n      const dis = 150;\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(\n          0 - dis,\n          0 - dis,\n          canvas.width + 2 * dis,\n          canvas.height + 2 * dis\n        ),\n        \"cross\"\n      );\n      emitter.addBehaviour(crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.1, 0.55)));\n      emitter.addBehaviour(new Proton.Color(colors));\n\n      emitter.emit(\"once\");\n      this.proton.addEmitter(emitter);\n      const renderer = this.createRenderer(canvas);\n      this.proton.addRenderer(renderer);\n\n      this.crossZoneBehaviour = crossZoneBehaviour;\n      emitter.preEmit(2);\n    },\n    createRenderer(canvas) {\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CustomRenderer();\n\n      renderer.onProtonUpdate = () => {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        const w = particle.radius || 60;\n        const h = Proton.MathUtil.randomAToB(100, 200, \"int\");\n        particle.data.w = w;\n        particle.data.h = h;\n      };\n\n      renderer.onParticleUpdate = particle => {\n        const w = particle.data.w;\n        const h = particle.data.h;\n        context.save();\n        context.globalAlpha = particle.alpha;\n        context.fillStyle = particle.color;\n\n        context.translate(particle.p.x, particle.p.y);\n        context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n        context.translate(-particle.p.x, -particle.p.y);\n\n        context.beginPath();\n        context.rect(particle.p.x - w / 2, particle.p.y - h / 2, w, h);\n\n        context.closePath();\n        context.fill();\n        context.globalAlpha = 1;\n        context.restore();\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./SquareParticles.vue?vue&type=template&id=227332d9\"\nimport script from \"./SquareParticles.vue?vue&type=script&lang=js\"\nexport * from \"./SquareParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"xor\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\n\nconst colors = [\n  \"#529B88\",\n  \"#CDD180\",\n  \"#FFFA32\",\n  \"#FB6255\",\n  \"#FB4A53\",\n  \"#FF4E50\",\n  \"#F9D423\"\n];\n\nexport default {\n  name: \"FountainParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n      if (this.color) {\n        canvas.style.backgroundColor = this.color;\n      }\n    },\n    canvasResize({ width, height }) {\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n      const emitter = new Proton.Emitter();\n      emitter.rate = new Proton.Rate(\n        this.num ? new Proton.Span(this.num) : new Proton.Span(4, 8),\n        new Proton.Span(0.1, 0.25)\n      );\n\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(20, 200));\n      emitter.addInitialize(new Proton.Life(2, 4));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(4, 7),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      emitter.addInitialize(\n        new Proton.Position(new Proton.CircleZone(width / 2, height / 2, 100))\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(1, 0));\n      emitter.addBehaviour(new Proton.Scale(0.2, 1));\n      emitter.addBehaviour(this.createCustomBehaviour());\n      emitter.addBehaviour(new Proton.Color(colors, \"random\"));\n      emitter.emit();\n      this.proton.addEmitter(emitter);\n\n      const renderer = new Proton.CanvasRenderer(canvas);\n      this.proton.addRenderer(renderer);\n    },\n    createCustomBehaviour() {\n      const f = 10 * 100;\n      return {\n        initialize: function(particle) {\n          particle.f = new Proton.Vector2D(0, 0);\n        },\n        applyBehaviour: particle => {\n          let length = particle.v.length() / 1000;\n          let gradient = particle.v.getGradient();\n          gradient += 3.14 / 2;\n\n          particle.f.x = f * length * Math.cos(gradient);\n          particle.f.y = f * length * Math.sin(gradient);\n          particle.a.add(particle.f);\n        }\n      };\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./FountainParticles.vue?vue&type=template&id=33c69588\"\nimport script from \"./FountainParticles.vue?vue&type=script&lang=js\"\nexport * from \"./FountainParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <canvas-comp\n    :bg=\"bg\"\n    :canvas=\"canvas\"\n    global-composite-operation=\"xor\"\n    v-on:canvasInited=\"canvasInited\"\n    v-on:canvasResize=\"canvasResize\"\n    v-on:canvasMouseDown=\"canvasMouseDown\"\n  />\n</template>\n\n<script>\nimport CanvasComp from \"./CanvasComp.vue\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport { getColor } from \"../utils/Color\";\n\nconst colors = [\n  \"#fad390\",\n  \"#81ecec\",\n  \"#ffffff\",\n  \"#badc58\",\n  \"#f9ca24\",\n  \"#FEA47F\"\n];\nexport default {\n  name: \"TadpoleParticles\",\n  components: {\n    CanvasComp\n  },\n  props: {\n    canvas: Object,\n    bg: Boolean,\n    color: String,\n    num: Number,\n    config: {}\n  },\n  methods: {\n    canvasInited(canvas) {\n      this.createProton(canvas);\n      RAFManager.add(this.renderProton);\n    },\n    canvasResize({ width, height }) {\n      this.crossZoneBehaviour.zone.width = width;\n      this.crossZoneBehaviour.zone.height = height;\n      this.proton.renderers[0].resize(width, height);\n    },\n    canvasMouseDown(e) {},\n\n    createProton(canvas) {\n      const width = canvas.width;\n      const height = canvas.height;\n      this.proton = new Proton();\n\n      const emitter = new Proton.Emitter();\n      emitter.damping = 0.008;\n      emitter.rate = new Proton.Rate(this.num ? this.num : 50);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(new Proton.Radius(5, 9));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(1.5),\n          new Proton.Span(0, 360),\n          \"polar\"\n        )\n      );\n      emitter.addInitialize(\n        new Proton.Position(new Proton.RectZone(0, 0, width, height))\n      );\n\n      const mouseInfo = {\n        x: width / 2,\n        y: height / 2\n      };\n\n      const attractionBehaviour = new Proton.Attraction(mouseInfo, 0, 0);\n      const crossZoneBehaviour = new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      );\n      emitter.addBehaviour(new Proton.Color(this.color || \"#bbbbbb\"));\n      //emitter.addBehaviour(new Proton.Alpha(new Proton.Span(0.5, 1)));\n      emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n      emitter.addBehaviour(new Proton.RandomDrift(15, 15, 0.05));\n      emitter.emit(\"once\");\n\n      this.proton.addEmitter(emitter);\n      this.proton.addRenderer(this.createRenderer(canvas));\n      this.crossZoneBehaviour = crossZoneBehaviour;\n    },\n    createRenderer(canvas) {\n      const jointCount = 12;\n      const delayTime = 6;\n      const context = canvas.getContext(\"2d\");\n      const renderer = new Proton.CanvasRenderer(canvas);\n\n      renderer.onProtonUpdate = function() {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      };\n\n      renderer.onParticleCreated = particle => {\n        particle.data.points = [];\n        particle.data.index = 0;\n      };\n\n      renderer.onParticleUpdate = function(particle) {\n        drawTadpoleTail(particle);\n        if (particle.data.index % delayTime === 0) fillPointsData(particle);\n        drawTadpoleHead(particle);\n        particle.data.index++;\n      };\n\n      const fillPointsData = particle => {\n        particle.data.points.unshift(particle.p.y);\n        particle.data.points.unshift(particle.p.x);\n\n        if (particle.data.points.length > jointCount) {\n          particle.data.points.pop();\n          particle.data.points.pop();\n        }\n      };\n\n      const drawTadpoleHead = particle => {\n        context.fillStyle = particle.color;\n        context.beginPath();\n        context.arc(\n          particle.p.x,\n          particle.p.y,\n          particle.radius,\n          0,\n          Math.PI * 2,\n          true\n        );\n        context.closePath();\n        context.fill();\n      };\n\n      const drawTadpoleTail = particle => {\n        context.beginPath();\n        context.strokeStyle = particle.color;\n\n        context.moveTo(particle.p.x, particle.p.y);\n\n        const l = particle.data.points.length;\n        for (let i = 0; i < l; i += 2) {\n          const x = particle.data.points[i];\n          const y = particle.data.points[i + 1];\n\n          context.lineWidth = linearEvaluation(i, l);\n          context.lineTo(x, y);\n          context.stroke();\n        }\n      };\n\n      const linearEvaluation = (i, l) => {\n        if (l <= 2) return 1;\n\n        const max = 6;\n        const A = (max - 1) / (2 / l - 1);\n        const B = 1 - A;\n        const X = (i + 2) / l;\n        let val = A * X + B;\n        val = val >> 0;\n\n        return val;\n      };\n\n      return renderer;\n    },\n    renderProton() {\n      this.proton && this.proton.update();\n    }\n  },\n  beforeDestroy() {\n    try {\n      this.proton.destroy();\n      RAFManager.remove(this.renderProton);\n    } catch (e) {}\n  }\n};\n</script>\n","import { render } from \"./TadpoleParticles.vue?vue&type=template&id=ec91e7f6\"\nimport script from \"./TadpoleParticles.vue?vue&type=script&lang=js\"\nexport * from \"./TadpoleParticles.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ParticlesBg.vue?vue&type=template&id=d60e5c56\"\nimport script from \"./ParticlesBg.vue?vue&type=script&lang=js\"\nexport * from \"./ParticlesBg.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import ParticlesBg from \"./ParticlesBg\";\n\nconst components = {\n  ParticlesBg: ParticlesBg\n};\n\nconst install = function(Vue) {\n  if (install.installed) return;\n\n  for (let key in components) {\n    Vue.component(components[key].name, components[key]);\n  }\n};\n\nif (typeof window !== \"undefined\" && window.Vue) {\n  install(window.Vue);\n}\n\nconst VueParticlesBg = {\n  install,\n  ...components\n};\n\nexport { ParticlesBg };\nexport default VueParticlesBg;\n","import { render } from \"./About.vue?vue&type=template&id=3ab600ba&scoped=true\"\nimport script from \"./About.vue?vue&type=script&lang=js\"\nexport * from \"./About.vue?vue&type=script&lang=js\"\n\nimport \"./About.vue?vue&type=style&index=0&id=3ab600ba&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\semey\\\\OneDrive\\\\Рабочий стол\\\\2 курс\\\\ркчир\\\\КР\\\\kursa4_vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3ab600ba\"]])\n\nexport default __exports__"],"names":["PI","MathUtil","PI_180","N180_PI","isInfinity","num","this","Infinity","a","b","Math","floor","random","center","f","isInt","randomAToB","toString","slice","randomZone","k","digits","pow","toColor16","i","o","t","constructor","value","enumerable","writable","configurable","h","Span","isArray","Util","getRandFromArray","randomFloating","c","pan","getValue","initValue","length","d","tx","ty","y","angleInRadians","cos","s","sin","p","sx","sy","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","createCanvas","id","width","height","position","dom","document","createElement","style","opacity","transform","resize","marginLeft","marginTop","div","x","scale","rotate","willChange","css3","key","val","bkey","charAt","toUpperCase","substr","imgsCache","canvasCache","canvasId","_","context","image","rect","drawImage","imagedata","getImageData","clearRect","img","callback","param","src","Image","onload","g","e","target","canvas","WebGLUtil","DomUtil","getContext","defaults","Object","prototype","call","arr","toArray","emptyObject","obj","ignore","indexOf","args","bind","apply","concat","particle","conf","hasProp","v","copy","props","prop","hasOwnProperty","getSpanValue","ImgUtil","destroy","assign","source","idsMap","Puid","_index","_cache","type","uid","getIdFromCache","isBody","isInner","Pool","params","__puid","getId","cache","pop","createOrClone","getCache","push","total","create","classApply","clone","count","Stats","body","add","emitter","getEmitter","renderer","getRenderer","str","proton","emitters","emitSpeed","getEmitterPos","initializes","concatArr","behaviours","name","getCreatedNumber","getCount","pool","container","innerHTML","cssText","join","addEventListener","_this","bg","color","parentNode","appendChild","emitterIndex","renderers","rendererIndex","result","cpool","round","EventDispatcher","listener","_listeners","removeEventListener","splice","listeners","handler","dispatchEvent","hasEventListener","removeAllEventListeners","Integration","particles","time","damping","eulerIntegrate","sleep","old","multiplyScalar","mass","clear","Proton","render","init","index","remove","parent","EMITTER_ADDED","EMITTER_REMOVED","_fps","PROTON_UPDATE","USE_CLOCK","then","Date","getTime","now","elapsed","amendChangeTabsBug","emittersUpdate","DEFAULT_INTERVAL","PROTON_UPDATE_AFTER","_interval","update","destroyAll","destroyOther","getAllParticles","set","fps","get","integrationType","stats","EULER","integrator","MEASURE","RK2","PARTICLE_CREATED","PARTICLE_UPDATE","PARTICLE_SLEEP","PARTICLE_DEAD","Rgb","r","easeLinear","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInSine","PI_2","easeInExpo","easeOutExpo","sqrt","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","getEasing","ease","Vector2D","atan2","w","addVectors","subVectors","divideScalar","distanceToSquared","tha","dx","dy","alpha","Particle","life","age","dead","sprite","energy","radius","rotation","easing","rgb","reset","data","removeAllBehaviours","applyBehaviours","max","applyBehaviour","behaviour","parents","initialize","addBehaviour","P","emptyArray","setProp","hexToRgb","hex16","substring","parseInt","rgbToHex","rbg","Number","Polar2D","getX","getY","abs","Mat3","mat3","mat","Float32Array","mat1","mat2","m","vec","ArraySpan","_arr","randomColor","Rectangle","right","bottom","Rate","startTime","nextTime","timePan","numPan","numpan","timepan","setSpanValue","Initialize","Life","lifePan","Zone","vector","crossType","alert","PointZone","error","Position","zone","getPosition","Velocity","rpan","thapan","rPan","thaPan","vr","polar2d","normalizeVelocity","Mass","massPan","Radius","oldRadius","Body","imageTarget","inner","Behaviour","force","removeBehaviour","Force","fx","fy","normalizeForce","calculate","Attraction","targetPosition","normalizeValue","radiusSq","attractionForce","lengthSq","sub","normalize","RandomDrift","driftX","driftY","delay","panFoce","addXY","Gravity","Collision","collisionPool","delta","overlap","totalMass","averageMass1","averageMass2","distance","newPool","otherParticle","CrossZone","crossing","Alpha","same","alphaA","alphaB","Scale","scaleA","scaleB","Rotate","rotationA","rotationB","getDirection","influence","Color","createArraySpan","colorA","ColorUtil","colorB","CHANGING","Cyclone","angle","span","String","toLowerCase","setAngleAndForce","cangle","cyclone","gradient","getGradient","Repulsion","GravityWell","centerPoint","distanceVec","factor","distanceSq","bindEmitter","setVectorVal","degreeTransform","Emitter","totalTime","stoped","emitTime","isNaN","rate","oldStoped","oldEmitTime","oldTotalTime","initAll","rest","initializer","arguments","emitting","integrate","dispatch","expire","event","bindEvent","createParticle","setupParticle","addBehaviours","stop","removeAllInitializers","removeEmitter","BehaviourEmitter","selfBehaviours","FollowEmitter","mousemoveHandler","_this2","mousemove","mousedownHandler","mousedown","mouseupHandler","mouseup","mouseTarget","_allowEmitting","layerX","layerY","offsetX","offsetY","babelHelpers.get","n","window","initEventHandler","BaseRenderer","thinkness","stroke","_protonUpdateHandler","onProtonUpdate","_protonUpdateAfterHandler","onProtonUpdateAfter","_emitterAddedHandler","onEmitterAdded","_emitterRemovedHandler","onEmitterRemoved","_particleCreatedHandler","onParticleCreated","_particleUpdateHandler","onParticleUpdate","_particleDeadHandler","onParticleDead","element","circleConf","isCircle","initHandler","CanvasRenderer","addImg2Body","drawCircle","bufContext","buffer","createBuffer","globalAlpha","globalCompositeOperation","fillStyle","fillRect","save","translate","restore","beginPath","arc","strokeStyle","lineWidth","closePath","fill","size","bufferCache","DomRenderer","bodyReady","transform3d","backgroundColor","removeChild","babelHelpers.typeof","createCircle","createSprite","createDiv","borderRadius","borderColor","borderWidth","url","backgroundImage","createBody","EaselRenderer","addChild","scaleX","scaleY","graphics","regX","regY","createjs","Graphics","beginStroke","beginFill","shape","Shape","PixelRenderer","rectangle","imageData","createImageData","putImageData","setPixel","elementwidth","PIXIClass","PixiRenderer","PIXI","Sprite","createFromImage","from","fromImage","blendMode","setColor","tint","getHex16FromParticle","anchor","endFill","setPIXI","MStack","mats","multiply","WebGLRenderer","gl","antialias","stencil","depth","initVar","setMaxRadius","initShaders","initBuffers","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","CustomRenderer","umat","smat","mstack","viewport","circleCanvasURL","texturebuffers","A","B","fs","VERTEX_SHADER","shader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","getShader","getFragmentShader","vertexShader","getVertexShader","sprogram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","vpa","getAttribLocation","tca","enableVertexAttribArray","tMatUniform","getUniformLocation","samplerUniform","useTex","uniform1i","idx","unitIBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","STATIC_DRAW","ids","unitI33","stripBuffer","raidus","circleCanvasRadius","toDataURL","_w","_h","_width","_height","_scaleX","_scaleY","createTexture","texture","vcBuffer","tcBuffer","ARRAY_BUFFER","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","textureLoaded","textureWidth","textureHeight","tmat","imat","oldScale","drawImg2Canvas","updateMatrix","uniform3f","uniformMatrix3fv","top","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","moveOriginMatrix","translationMatrix","angel","rotationMatrix","scaleMatrix","matrix","inverse","LineZone","x1","y1","dot","xxyy","tha2","oldx","oldy","maxx","minx","maxy","miny","direction","rangeOut","getDistance","getSymmetric","x2","y2","min","getLength","CircleZone","PIx2","randomRadius","distanceTo","RectZone","ImageZone","vectors","setVectors","j","length1","length2","getBound","negate","func","getStyle","moveTo","lineTo","drawRect","Vector","Polar","getSpan","Init","L","V","M","R","F","RD","G","S","WebGlRenderer","Debug","vendors","requestAnimationFrame","cancelAnimationFrame","timer","state","animations","aniData","start","getIndex","deleteMap","tick","class","_createElementVNode","_imports_0","alt","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_router_link","to","path","_hoisted_3","_component_routerLink","_hoisted_4","_component_MenuBurger","onClick","$options","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","components","methods","burgerMenu","menu","querySelector","links","toggleMenu","classList","toggle","__exports__","MenuBurger","_component_Navbar","_component_particles_bg","_createBlock","_resolveDynamicComponent","$data","$props","config","Rand","list","probability","calculation","getResult","_component_canvas_comp","onCanvasInited","onCanvasResize","onCanvasMouseDown","ref","_ctx","onMousedown","onMousemove","Boolean","styleObject","initCanvas","$refs","canvasRef","clientWidth","clientHeight","$emit","handleMouseDown","handleMouseMove","created","zIndex","left","mounted","beforeDestroy","hex","exec","getColor","CanvasComp","canvasInited","createProton","createMiniEmitter","RAFManager","renderProton","canvasResize","crossZoneBehaviour","canvasMouseDown","addInitialize","customDeadBehaviour","emit","addEmitter","addRenderer","miniEmitteing","miniEmitter","radiusInitialize","colorBehaviour","colors","Array","pointZone","createRenderer","pA","pB","dis","canvasDom","repulsion","attraction","hue","begin","colorTemplate","replace","ratio","getCompositeOperation","operation","getProp","defaultVal","getArrProp","rps","cross","emitterV","pos","onUpdate","mouseObj","attractionBehaviour","COLOR","createEmitter","mainEmitter","drawPolygon","once","gravity","completed","radiusInit","expireEmitter","setTimeout","emitterCount","preEmit","createCustomBehaviour","mouseInfo","jointCount","delayTime","points","drawTadpoleTail","fillPointsData","drawTadpoleHead","unshift","l","linearEvaluation","X","ColorParticles","CircleParticles","CobwebParticles","ThickParticles","LinesParticles","FountainParticles","CustomParticles","PolygonParticles","SquareParticles","TadpoleParticles","BallParticles","required","default","getNum","getRandom","getFromList","item","transformName","setParticles","beforeMount","ParticlesBg","install","Vue","installed","component","Navbar"],"sourceRoot":""}